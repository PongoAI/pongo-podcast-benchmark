Ben: Hello Acquired LPs. Most of you know Austin Federa by now. He is one of the longest time Acquired community members. I looked this up before the podcast. He literally joined the Slack basically the month it started existing in 2016.

David: Amazing.

Ben: He is the founder of the Digital Assets Channel in our Slack and leads that sub community. He’s also the head of communications. Austin, is that your correct title these days?

Austin: That is.

Ben: For the Solana Foundation. As part of Solana’s sponsorship of the LP program this year—we were brainstorming—if we're going to do some crypto-focused episodes on the LP show, what would be the best thing that we could do to start that off? We were definitely thinking, Austin, we should do it with you as a co-host and that would be very helpful to David and I.

David: It’s like wait a minute. We have a world expert in this, who is deep in every day literally building phones for crypto, who is a key community member. We should probably do something together.

Ben: David don't spoil the phone thing; we'll get there. We're thinking what to do and we were thinking as the first episode, it would be great to just get a state of the union of all things crypto, Web3, and Blockchain here in July 2022. This is crypto so it's very important to mark that timestamp. I might have even messed up by not going higher resolution to the week, but there are a bunch of stuff that we've talked about since the Bitcoin episode on Acquired and Bitcoin, Ethereum, four or five LP shows we've done in crypto.

A bunch of stuff has changed since then and there are a bunch of things that people used to talk about in crypto in the 2013–2016 era that they sort of no longer do and I'm curious how they sort of have morphed into the words that we use today to talk about this landscape.

Austin: You guys aren't still using token-curated registries?

Ben: Or what's that phrase? I'm bearish on Bitcoin but I'm bullish on the Blockchain.

Austin: Yeah, there we go. There's a lot of that there.

Ben: Of course there are new phrases like DeFi, yield farming, and the metaverse, and we're going to dive into some real actual definitions for these things, how they've evolved over time, what those communities look like of people who are interested in those particular topic areas. Anyway, this is a long intro. Austin, welcome to the LP show.

Austin: Hey guys. Happy to be here.

Ben: Let's talk about, go way back and do the Acquired thing and start off chronologically and personally for you. What was your very first interaction with the Blockchain?

Austin: My first interaction with an asset built on Blockchain was probably buying some Bitcoin and I want to say 2014. I probably bought $50 worth of Bitcoin and then promptly somewhere in the next six months, forgot about it and lost the keys, and it's probably worth several hundred thousand dollars now. That was my first experience.

David: How did you buy it?

Austin: I definitely bought it at Mt. Gox. It’s 100% gone. If it did once exist, it is not completely gone.

David: I think that’s my favorite piece of crypto history, that Mt. Gox was originally a magic to gathering online marketplace.

Austin: Yeah, right? It’s like everyone got rugged by Mt. Gox at some point.

David: You can't make that up.

Ben: That’s the way that I take solace in not being a crypto Zillionaire. I was paying attention to it in that era but I didn't buy, but if I had bought, this is price circa 2012-ish that it almost certainly would have been on Mt. Gox and it would have gone to zero anyway, so I can't feel too bad about not taking action there.

Austin: That was the real Wild West days.

Ben: I think your bring up an important concept there which is, despite Bitcoin being a self-custody a bull asset, the way in which you bought was not something where you actually own the keys so, not your keys, not your crypto would sort of apply to the Austin 2012 Bitcoin through Mt. Gox.

Austin: Yeah, this is true of so much about public-private key encryption, especially around that time. I was one of those guys who is like, I'm going to use PGP, it's going to be awesome. And then like, I could never keep track of my keys. No one else was like using it, it was super hard to encrypt emails that way. The whole experience was just really difficult.

I was someone who was ready for this challenge. I just was bad at this stuff in the early days. I didn't really understand the tech super well. I definitely didn’t understand how to properly store the stuff and how to use it. Not that Cloud storage is a great idea at all, but back in those days, you had to have a thumb drive or a hard drive, and that was the only thing if you were not going to invest a ton of money into some real secure solution out there.

I was in college or that was right after college and making $30,000 a year working in public radio in Missouri. I wasn't going to go spend a few hundred dollars on very early versions of hardware that existed then. That was my first experience with this stuff. It really took until late 2017 for me to kind of get back into the space.

Ben: I remember when we met. You were working at Republic, the crowd funding website. At some point, you moved over and started working at Bison Trails which folks may know was acquired by Coinbase. How did you find your way to Bison Trails and what did you do there?

Austin: Before Republic was my intro back into the crypto space, I moved to New York after working for a company called Superpedestrian which was trying to do this thing. Do you guys remember the Copenhagen Wheel?

David: Yes, I totally remember that company. I really wanted one.

Austin: They were awesome. They were impossible to manufacture and basically giant bombs on wheels, because you have lithium ion batteries in a magnesium casing. There's basically no way to put out that fire if it catches on fire. The company doesn't make them anymore.

David: This was a bike wheel, a bicycle wheel that turned any bicycle into an e-bike.

Austin: Yeah. It is a fully self-contained system. All the retrofit products nowadays and at that time, they were like, you bolt this battery to your frame, you put this hub motor in, it wasn't a very elegant experience.

The Copenhagen Wheel was beautiful, but it was one of those like kava that super TV remote systems that use AI vision to figure out what input was your Apple TV or general magic way before I was even born. All that stuff was amazing technology with absolutely no problem it was really solving for people.

I moved to New York for a job with a fintech company that was promptly failing which of course, you never know that when you join a company. They were breaking the bank and it wasn't going well, and they were pivoting to a borrowed ledge token on Ethereum. This was before anyone really had thought about defiant scales. It was before DeFi summer. That also failed.

I basically left two months after moving there. That was the first time like, when you have to do something for work, you're forced to sit down and be like, all right, so maybe I don't really believe that the world's slowest computer is going to be something that's going to be valuable. But when you're forced to sit down and use Ethereum for work, you start to look at these things in a very different way.

You set your bias aside, you say all right, we’re going to use smart contracts, so I better learn how these things actually work. That was the place where I really got bit with the bug.

Republic was an offshoot of AngelList. It was targeted at non accredited investors. But a bunch of the folks who used to work at AngelList turned to Republic. We had this thing called Republic crypto and Republic crypto advisory services. I sort of helped them build up that brand and launched that thing and then went to work for Bison Trails doing product marketing for them.

Ben: What was Bison Trails?

Austin: Bison Trails was I would say really the first enterprise-grade Blockchain Infrastructure Company. The idea of Bison Trails, it was by two founders who had already sold the company to Etsy beforehand. They really knew how to build and scale a software company.

The idea was that running Blockchain infrastructure was too difficult at that time. It was a lot of boutique operations which mainly provided excellent service, but they were really only covering one or two protocols. Or it was very customized solutions that didn't have any service and support associated with them.

Bison Trails really was saying, we're going to have a broad coverage of a ton of different protocols for staking and validation, and also the ability to run data nodes. But they were also going to offer this radical idea called SLAS. Something that just didn't exist in the Blockchain industry where it's like, you can sign a contract and you're going to pay more at Bison Trails than you're going to pay somewhere else, but there's a dude somewhere or a woman somewhere you can wake up at 3:00 AM in the morning with a 30-minute response time when your infrastructure goes down.

It was really targeting this emerging category of Blockchain companies where you lose more money from downtime than you lose from having a higher monthly bill. This is sort of like, if PayPal goes down, if Visa goes down, those companies lose massive amounts of money. It’s worth spending four times what they maybe “should” spend on infrastructure because the downtime risk is so expensive.

That was really what Bison Trails was doing. They weren't building a ton in the space. They weren't core contributors to projects, but they would be building things like indexers that would make it easier to interact with Blockchain data. They would run Eth archival nodes, they would run all of these data availability services that are really needed to make Blockchain accessible to lots of people.

If you think about it, 90% of what we do, maybe 99% of what we do on the Internet is a read operation. It’s not a write operation. There's way more traffic on Cloudflare than there is on a database on Amazon. Because of that, that level of availability just wasn't a professional idea.

Now there are a lot of great companies. Alchemy does this, Figment does this, QuickNode does this, but Bison Trails was really the first one to do it at a level where enterprise could depend on it and build on top of it. That was a really cool place to be. They got acquired by Coinbase.

David: I'm not 100% familiar with what they do, so I maybe misspeaking, but I'm thinking like ServiceNow for crypto?

Austin: Exactly. Something like that.

Ben: I’ll catch us up on the timeline. I think you joined—I'm working off memory here—Solana, January 2021. Is that close?

Austin: Yeah. Bison Trails got acquired by Coinbase. This is actually a funny story. Solana Labs had a few former Republic folks. Chad there was the associate general counsel. I think that was his title at Republic. He was one of the lawyers at Republic. He's now GC at Solana Labs. Then Sparango who I hired as either an intern or kind of first job out of college type of person. After working at Multicoin, he joined the Solana team.

It was one of the things where we have this Republic alumni that was ready to take on a new challenge. I told myself, you know what? I'm going to spend two or three months. I'm going to some time. I'm going to talk to all the L1s. I'm going to talk to a bunch of the L2s. I'm going to try and figure out what the best company to join is and what the right fit it's going to be.

I got on the phone with Raj and Anatoly and I think 24 hours later, we had a signed offer letter. It was just like love at first sight.

David: Amazing. It never works that way, by the way. Every time—at least I've been in a job process—you can plan out all you want but it's never going to work that way.

Austin: Exactly. It was one of these funny things, especially at that time. Bison Trails ran infrastructure for Solana. Solana was pretty small back then. We at Bison Trails didn't really have many customers using Solana infrastructure. It was one of these things where it was like, if I had predicted what protocol I would have joined, it would've been Polkadot or something like that. It would not have been Solana. But then, it just turned out that the pitch of Solana, the experience of it, the way they were talking about it, it worked from my brain.

I was like, these are a lot of the criticisms I've had about the way other protocols are constructed, the way Eth2 rollout is going. These are really smart people who are thinking about in the right way. Even if it doesn't go anywhere, I'm going to learn a hell of a lot.

David: When right about this time, too, if I'm remembering right, Solana was the only modern L1 that was actually in production that you could use, right?

Austin: Yeah. That's also some of it.

Ben: Technically Mainnet Beta, I think.

Austin: Yes, still Mainnet Beta. Serum was alive at that point on it. There were early signs and proof of concept, the smart contract language was working. There were smart contracts deployed on it. You didn't have to wait for additional features to be shipped for it to be usable.

Ben: It's funny I said January 2021, which feels like that was very recently. But in the life of Solana, first of all to me, it feels like an epoch ago, both because we had a pandemic and because a lot of the interaction you and I have had while you're at Solana and when we’re hanging out at Break Point and stuff like that. Do you have a way to peg some kind of number to that number of developers building on Solana, then versus now?

Austin: I think when I joined, there were about 37 on-chain programs that had transactions running through them each day. Now, there are over a thousand.

Ben: Pretty crazy. Talk about timing joining a company right at the right time.

Austin: Yeah. It was a lot of luck there for me.

Ben: Of course, we should say you’ve had a lot to do with it, too, but without complimenting you too much, I want to dive right into the meat of the episode here, which is the first topic I want to tackle, which is energy efficiency. I think while you're here in the Solana area, can you give us a quick primer on proof of work, what chains were and are today proof of work, and what the world of proof of stake has evolved to look like?

Austin: Proof of work, a lot of people attribute it to saying that this isn’t computational power and math to secure the network. That's not really an accurate way to think about it. The goal of proof of work is to make it so the resources needed to compromise the security and integrity of chain is above what anyone else can really achieve.

For here in proof of work, we talk about it like it's math but it's not actually math. The difficulty of solving a block in proof of work fluctuates depending on how much computational resources are on the network. What it’s actually a proxy for is energy usage. Proof of work is secured by energy usage. It's a little bit of a string in knowledge.

Ben: It's not a bug. It's a feature.

Austin: It is 100% a feature.

Ben: When people talk about the big downside to the Bitcoin network is that it uses so much energy. Sure, but that is literally the design. It is to say it would be noneconomic for you to spend this much money on energy to attack me.

Austin: Setting aside economics. There are stats out there that Bitcoin uses much energy as Argentina. You can't buy as much energy as Argentina. You can't go out there and go to a power plant and say hi, I would like 100% of your energy.

David: I would like one Argentina unit of energy, please.

Austin: It's just not something you can do, let alone the number of miners and all that stuff. The amount of raw energy you would need to attack the Bitcoin network is astronomical. That is really what the proxy is here.

We're not really talking about solving math as the way proof of work has its security basis. The real security basis is energy usage. Sure, you can look at more sustainable forms of energy, but the goal of proof of work is if it uses less energy it becomes easier to attack, full stop.

Ben: This cool thing called proof of stake comes around, which the main virtue of it is it uses way less energy, so we're not going to consume all of the energy in the universe to try and attack one another’s networks here, which is very good. How does that work?

Austin: Look. Everything, if you take it to an extreme, becomes absurd. But there's a pretty reasonable future where proof of work requires building a Dyson sphere around the sun to harvest all the energy to run miners and disassembling Jupiter to build fusion reactors. That is an insane but not quite so insane future that you see with a proof of work–based system.

There’s certainly social consensus around that that could change that, but that's really what the main criticism is there. Like criticisms of capitalism, it requires ever increasing energy usage just like requires ever increasing growth.

With proof of stake, the design principles are different. Instead of having energy be your proxy for security, you have two components. One is a fixed quantity or a known quantity of crypto assets which is where the steak comes from. You attach certain amounts of stake to your validator. If you want to attack the network, you need to physically cumulate a certain amount of that currency.

The other piece of it, too, is the stake stands for value. It's basically saying I've put up a bounty. I put up assets at risk. I'm going to run a validator. I have attached $10,000 of Solana, of Polkadots, pick your currency to it. Therefore if my validator misbehaves, either intentionally, maliciously or just accidentally and I'm doing something that damages the network, the network has the ability to punish me.

It can say, we know this crypto is owned by this validator. We know this validator is misbehaving, this is called slashing. We're going to destroy a small amount of your crypto. If you keep doing it, we're going to keep destroying more and more and more. It's basically a system of fining to bring people back into compliance. This changes from network to network.

Ben: Just as a nomenclature thing, I want to make sure for folks who aren't super deep in the Solana world, when you say validator, this is effectively the people who are running servers that maintain the network and the equivalent in Bitcoin land would be miners?

Austin: Yeah, exactly or the Ethereum one land would be miners. In this situation, the validators have assets at risk. It runs on game theory. It solves a prisoner's dilemma problem, where no one has an incentive to defect from what consensus is, because if you get caught, the repercussions are astronomical and you will get caught because it is a Blockchain. This is the way that this has a self-reinforcing mechanism where the more valuable the network is, the more secure the network becomes because people are more at risk.

The criticism of proof of stake and there are a lot of legitimate criticisms for proof of stake, one of them is the network recoverability is lower. You saw this when China did its thing where it was maybe banning mining. A huge chunk of hash power of the Bitcoin network went offline. Bitcoin blocks became extremely long, sometimes in multiple hours in length, because the actual computational power on the network had dropped.

But because of the way proof of work works where you just have to solve the math because it's a proxy for energy, the network is able to recover even if a large amount of the hash power goes offline. The network just gets really slow. It might take a long time to recover, but it's not going to crash.

With proof of stake networks—this is true of all proof of stake networks—because the stake is the method of security, if enough of that stake goes offline, the network has to assume it's under attack. Therefore the network halts. One of the criticisms of proof of stake is that it's theoretically less stable in terms of its design than proof of work.

David: This actually happens in real life, right?

Austin: This happens, yeah. This has happened to the Solana Network before. This has happened to the Ethereum 2 network before. This does occur and this is something that people should keep in mind when they're building or designing proof of stake systems is that eventually it will probably go down and that is going to be a human consensus effort to restart the network at that point.

David: It's going to be like in AWS outage.

Austin: Yeah. Except, the difference from an AWS outage—and this is the key differentiator about a distributed system—if AWS goes down, the only people who can bring it back up are Amazon employees. If a proof of stake network goes down, everyone around the world who’s been running a validator, they have a valid copy of the ledger.

This is sort of like a cockroach theory of decentralization. As long as one copy exists, that person that has the ledger can go around and they can give it to everyone else and everyone can slowly restart the network and bring it back online. If there's a nuclear war, cockroaches are probably going to survive because they're globally distributed, decentralized. That's the idea of the proof of stake ledger.

David: Amazing.

Ben: It's also a very common thing that we see in all engineering systems. Heavy engineering products that are sort of new things in the world are essentially a search and discovery problem. Someone tries one thing once, it works really well for a thing, but it is very, very terrible at enough other things. Either the one thing that it's really good at is sufficient and it becomes the future, or you need to riff on it because of the heat death of the universe or some reason why we're like, okay, that's bad enough that someone should take another shot.

We live in a gigantic free market, so people can try more things. Someone tries another thing. That thing has problems, but those are maybe incrementally solvable. The Internet ended up being the way that we all access hypertext, images, and communication online, rather than the information superhighway which is going to be dominated by AT&T, the government, and whoever else was coming together on that.

Internet infrastructure had a lot of problems, like being super subjected to DDoS attacks or whatever it is. But you figure out what the glue layer is or what the way to sort of patch that problem and deal with it, and then continue iterating forward.

I'm going to get a lot of heat here (I think) if there's the proof of work nazis that I'm going to bother here, but it does seem like enough people have sort of decided these proof of stake chains are good enough, and we should build stuff on top of them or around them to overcome this problem of like, oh, yeah. It might halt.

Austin: All major smart contract platforms are moving to proof of stake. Ethereum is the only major smart contract chain that remains proof of work at this point. Sure, Bitcoin could move to proof of stake, and that's a community decision around that if something like that happens. But the point of Bitcoin is that it's boring.

Bitcoin is incredibly boring. The code base is incredibly static. You can do almost nothing on the Bitcoin network. That's entirely the point. It is meant to be stable, dependable proof of work. You can't run a smart contract on Bitcoin.

Ben: Not programmable?

Austin: It's not programmable.

Ben: Robust applications?

Austin: Exactly. That's its entire reason for being.

Ben: Or there are not complex applications, at least.

Austin: There are no applications. There's no compute layer on the Bitcoin network. It is just designed to do the one thing that it's designed to do, and it does that incredibly well. The evolution here is, I would say the difference between Bitcoin and Ethereum is astronomical.

One of them is really meant to be an asset that can hold value or the value can change, whatever. It is meant to represent monetary storage in some capacity. Smart contract platforms like Ethereum, like Solana, like Polkadot, like pick-your-chain, those are all designed to be places where you can build applications on top of them. They're designed to be more of like platform technologies than they are designed to be straight-up storage value networks.

Ben: I think that's an interesting place. By the way, we should say this would be a good place to talk about proof of history. I would like to direct folks to listen to our Solana episode with Anatoly himself to hear his legendary explanation of how proof of history works. That's, of course, how Solana is so much faster, cheaper, and more performant than the original smart contract platform of Ethereum. Hearing the wizard himself explain it, I find it quite thrilling.

Austin, you read the original Bitcoin white paper, or at least when David and I did. It seemed to really be about transactions—facilitating payments and micro payments. It sort of evolved to be, okay, those are going to be expensive.

What it really ends up being more about is a store of value. If we can believe that the price is going to be stable, then it's a store of value. If we believe that the price appreciates, then it's a place to invest. But it's certainly not a great place to go and transact with a merchant at a store. The Bitcoin community, at least in my view, seems to have sort of decided, yeah, that's okay. It is a store of value at this point. It is not a transaction layer.

Meanwhile, you have Ethereum, Solana. You have this whole world of things that are completely different and not solely for storing or transacting value that are like the distributed world computer, this idea that it's a decentralized thing all around the world where it's a smart contract platform. You can build applications on top of them.

Can you talk about, should we even be talking about these two very different things in the same language today? Or are these really two completely different technology waves that happen to get sort of confused together?

Austin: I think there's an analogy there between desktop computing and mobile computing. They're sort of the same thing, but they're actually incredibly different hardware paradigms, application paradigms, software paradigms, like the things you have to manage between. Not even desktop computing, like mainframe computing. They're extensions of one another, but they're really different in terms of their end applications.

Bitcoin gathers a lot of the attention because it's the first and it's the largest market cap. It's been around for a very long time at this point. That's great, but it's not really pushing the bounds of what's possible nowadays. All of that innovation and experimentation is happening on other networks. Bitcoin Lightning is not Bitcoin, it's something else, and that something else is fine.

Ben: What is Bitcoin Lightning?

Austin: It's another network. You can think of it as a layer two for Bitcoin. It's kind of the best analogy there. It's designed to allow offloading transactions onto something else that enables smaller units of transaction. You can do that on any network, though.

There's a lot of wrapped Bitcoin which becomes collateral in Ethereum DeFi, in Solana DeFi. If you want to use Bitcoin for micro payments, you can actually do that on any other smart contract platform. The fees are going to be much lower and the finality time is going to be much faster. It is economically viable to pay for your coffee with Bitcoin if that Bitcoin is wrapped on Solana.

That's kind of where the world of Bitcoin hasn't necessarily adapted to that mindset, which is, hey, you can still love Bitcoin and you can transact in Bitcoin, but you can't do it on the Bitcoin network. Lightning is the thing of choice right now, and there are a lot of historical reasons for that. It was really the first application for something like this.

There are a lot of solutions nowadays, the same way that you can spend US Dollars via Apple Pay, or you can spend them via a credit card, or you can spend them via a check. There are multiple mediums now in the financial world for accessing that same settlement layer. You can take that same analogy and you can apply it to Bitcoin. There are many, many ways to settle and transact in Bitcoin.

Ben: I like that analogy of writing a check is like paper wrapped USD, where paper is the way that I'm delivering it. Of course, then there are some, I don't know if it's ACH or whatever happens in the back end on how a bank processes a check and squares it up with the other bank. But ultimately, USD is the store of value, and paper and that other stuff is the wrapping to enable the transaction at whatever the cost the transaction needs to happen at.

Austin: Exactly.

Ben: I'm going to keep us here for a minute. You teased the idea that by going right into DeFi while talking about ETH and the Solana blockchain, that even though this is actually a globally distributed, decentralized computer, it does have financialization characteristics. It does sort of take from the original Bitcoin world of having store value, having transact stability.

It's not just like, cool, now I can deploy my web app, but I can do it in a way that's censorship resistant. It's like, no, it has financial assets baked in. Can you talk a little bit about—let's take the Solana blockchain as the example—tie together smart contracts, running applications, and I can store value for me here?

Austin: This is actually an incredibly old idea. If you go back to the days of academic computing, or mainframe access, or even modern supercomputers, if you're a scientist, you're a researcher, or you're a corporation, and you want to submit a job to a supercomputer cluster, you buy a certain amount of compute units on that supercomputer cluster.

Let's say you're rendering something—RNDR is a whole example of this. You submit it to that thing, you pay for those compute units, and you get back whatever you get back. That is a really good analogy to think about how deploying an application on a smart contract platform works today. Instead of it being one big supercomputer in the basement of IBM or an NVIDIA graphics farm somewhere, it is instead globally run all around the world by everyone's computer that happens to be running that network.

There's an inherent financialization there because there's no free lunch in blockchain. At the end of the day, someone is paying for the transaction somewhere. Someone is paying to serve the data, someone is paying for that transaction. Now, it might be that the transaction cost is so minimal that the application you're using eats that cost. You see that oftentimes on Solana. Or it may be the case that you have to pay for that.

One of the ways to think about this is if you're a developer and you're deploying a contract to the network, you're basically buying state. You're buying a certain amount of storage in the account database, the state, or wherever the analogy that the chain you're using uses. That then is distributed on all the validators everywhere that are running this.

That program, basically, has a reserved capacity somewhere in that state. Me as a user, I can say, okay, I want to submit a transaction to Serum, to Orca, or to something on the chain, some program on the chain. It's going to transact for me.

I'm putting inputs. But no matter what you feed that contract on-chain, it's going to follow the same pipelining process for whatever input you give it. This is kind of the way that smart contracts work and really every computer program if you think about it.

You feed it an input. Depending on what the input is, you get a different output, but it's going to go through that same pipeline of processing. That is really the way that these globally distributed systems work. You have to pay a certain amount of fee for the right to basically process that amount of compute units. That's a pretty technical explanation of it.

Ben: No, it's great. It's interesting trying to have this conversation, because I'm trying to have it at a level that's sophisticated but also at a place where people who are longtime Web2 engineers, CEOs, and builders, are also feeling like they're keeping up with us.

The important thing to realize here is when you are buying to reserve that compute, you are doing that in a means that is denominated native to the network. Whereas if I was going to a supercomputer cluster in 1978 and reserving capacity, I'm paying in USD to reserve the ability to run some compute on their network of supercomputers that they have in a lab. Here, I'm doing it in this pretty interesting new invention that is a currency or means of denominating value, literally native and processable by the network.

Austin: Exactly. The really interesting thing about that is, those costs are demand-driven on most networks. There's maybe a base level cost, which is this is what it costs to send a transaction on the network. That includes a minimum number of compute units or it's denominated differently like the way you see as something used a lot on Ethereum for this.

Basically, the more complicated and the more intensive the contract you're deploying or the instruction set you're trying to execute, the more compute units you need to buy. This is why different types of transactions cost different amounts on the blockchain, which makes sense. If I'm sending you a letter or I'm sending you an anvil, the cost for FedEx is going to be much different.

Ben: Or if I'm executing Hello World versus I'm rendering a Pixar film, that costs a different amount of compute resources in order to make that happen.

Austin: Totally. This is something that, I would say, most Web2 engineers are deeply aware of because of the way that cloud infrastructure pricing works, especially when you're looking at something like egress bandwidth coming out of a cloud provider. That is what you get charged for more than anything else.

This idea of there being a finite number of resources for a chain and you have to somehow meter those and control those, that's really where this idea of a smart contract platform comes in. That's also where you see scaling and capacity limitations on some chains nowadays.

Ben: Okay, let's talk about an element of crypto that everyone listening is familiar with. Oh, man, numbers go up. Oh, numbers go down. Those things being driven by market forces speculating on the currency themselves, versus the pure intrinsic value of the user gets economic value out of running applications. Therefore, it is worth the developer paying to deploy that application on the blockchain. Why did the numbers go up and down so much, versus them just being driven by the slow organic development of use cases on the network?

Austin: There's a whole bunch here, but I think one important thing to start with is the network doesn't care about a token price at all. The cost of sending a transaction on Ethereum or Solana is not denominated in US dollars, and it has no regard for US dollars. The compute costs are going to be the same whether the price of Ethereum is $10 or $10,000.

The thing that's going to be different, sure, is maybe the demand will be different depending on those stages. The network can only look at what it can look at, and that's the stuff that is native to that base layer. The US dollar is a bad example, it's a global reserve currency. Let's just pick a currency out there. If the exchange rate between the US dollar and the Russian ruble massively fluctuates, that doesn't actually have any effect, in theory, on the internal economy of either country. It only affects trade going back and forth.

The cost of buying something in the United States does not change because a different currency moves in valuation. That's kind of the best analogy to look at in this situation. Now as things get more interconnected in blockchain that's changing a little bit, but fundamentally, the cost of sending a transaction is denominated in that cryptocurrency and does not change with the external US dollar price equivalent to it. So, helpful. Yes.

Now, why do prices go up and down so much? No one knows is the short answer. If anyone knew, they would probably have several billion dollars at this point, just based on being able to predict trading. The interesting thing about crypto is it's the only market in the world with perfect information availability.

A distinct characteristic of blockchain markets that is different than everything else in the world is that while the content of the information going over the network isn't necessarily public, the existence of the transaction is public. You see this all the time, where markets can act with perfect information availability for anything that's happening on-chain. That is not true anywhere else.

You and me transacting on Solana have the same information access as Citadel. That is definitely not the case in the equities world. They're literally buying fast lanes from the NYSC and all these other places that are faster data feeds.

Ben: You don't know what transactions are happening in a dark pool before they get submitted to the exchange, that sort of thing.

Austin: Right, all of that work.

David: Or you could either do a block trade or whatever.

Austin: Sure. There are tons of things in the existing financial industry that are built to obfuscate that, either intentionally or as a side-effect of the way they've been designed. But for stuff on blockchain, it just doesn't work that way.

There's one theory out there, which is that markets actually operate worse with perfect information and perfect information availability. The efficient market thesis is fundamentally flawed because it doesn't include human decision making in the process. You see this all the time, where the more information is in the markets, the more over ordering or under ordering usually takes place at a corporate level.

There is a theory out there. I'm very curious if someone's actually been able to prove this out that because crypto markets have greater information availability than any other market in the world, they actually have higher volatility than any other market in the world, because they're more subject to crowd impulses, which are acting on perfect information.

Ben: Fascinating.

Austin: Yes.

Ben: Let me pop up one level. This is going to be a little philosophical, so let me see if I can land the plane, and then I'm curious to hear your thoughts, Austin. What we've been talking about here is very much speculation and trading of the financial assets of ETH, SOL, or BTC in a financial asset market. What we were talking about in the previous question was using SOL on the Solana network or ETH in Ethereum, to pay for compute of a decentralized application.

One could imagine that if there was no financial market for the token, that you would see this slow organic growth of the market cap of a network that literally just increased with the usefulness today of applications on the network. In practice, what that might mean is it just forever stays at zero, because there's no way to bootstrap the network. There's no way to get to critical mass or enough people caring, because no user is ever going to receive value from an application, because there'd be no financial incentive to create the application.

I think you're quickly seeing the analog to sort of venture capital of, hey, wait, startups, most of the time couldn't really exist without some startup capital in order to incentivize the employees to build the thing in order to pay for the resources required to build the thing so that eventually users can get value.

I think an interesting observation for crypto—and I haven't dug into it as quick as much as you have, so I'm curious to hear your thoughts—is the market caps of tokens, because numbers go up so much and people get all excited, and there is a very liquid financial market to trade these things, can the market cap of tokens can expand massively quickly at tens, hundreds, thousands, or millions of times the scale of the usefulness today of applications on that network?

There's a ridiculous amount of future growth and value priced into the token values that we see today. How do you think about that? Because I'm sure you think about that a lot.

Austin: One of the interesting things here is, I think for a long time, me at least or other people I talked to, were thinking that as crypto matured, it would become a little bit more stable and it would more closely mirror the stock market. Instead, what's happened is the stock market has become mirroring crypto.

You see, sure, there's a crypto downturn right now. Ethereum is off 80% of its value, Solana is off like 85% of its all time high value. So is Netflix. So is a bunch of tech stocks. It's this really interesting thing where you could do a thought experiment.

There are two that I really liked. The first is what would have happened to WeWork if it were publicly traded from day one? Would it have been a $43 billion valuation crashing down to a $4 billion valuation? Would it have ever gotten there? Would it have gotten there sooner? These are really interesting questions.

It's really hard to answer what would have happened, but that is the situation for all these cryptocurrencies. It's all traded in public. That means that the same way that Penny stocks on those websites that are pretty disreputable, will go up 400% in a few days, and they'll crash down again. It's because people have the ability to mislead themselves.

You see this in the normal stock market now, too. You see that it's not just retail investors. It's institutional investors who also have those exact same biases and problems with them.

Another fun thought experiment is, how valuable is Linux? If you had to put a monetary value on Linux, it's either zero or infinite. There's no number in between. It's either the world's most valuable thing ever created or it's entirely unvaluable.

Ben: In particular, unvaluable, because even though it has obviously created tons of value since everything we use every day is based on it, it has managed—whether intentionally or not—to capture zero of it.

Austin: Yeah. You can't overstate. If you use a piece of electronics, even if it's paid by Microsoft, there's a chance that Linux is running in it somewhere.

David: Almost 100% chance.

Austin: Yeah, it is astonishing how ubiquitous Linux is nowadays. It's captured no value.

Ben: It's interesting. I just painted a little bit this case of, wow, token prices, in general, across all of crypto, even after this crash may be pricing in some absurd amount of future value that hasn't yet necessarily been created.

On the other hand, if you look at the total market cap of crypto, which I haven't checked today, and actually isn't relevant because it will be a little bit before we release this episode, but somewhere around a trillion dollars to the extent that decentralized applications running on Solana and its brothers and sister chains, to the extent that that becomes the dominant way that we all compute in the future. A trillion dollars, it's going to be a lot bigger than that.

Look at what the Internet's market cap is today and if you sum up all the Internet stocks. That's, of course, the other side of this, where you just have to decide, well, do I think that this technology paradigm is the future? If so, sure, it’s pricing in a bunch of future growth but certainly not all of it or nowhere close.

Austin: Yeah. At the risk of sounding like Google executive, like it's early days.

David: That is the fundamental difference between crypto and Linux, which is that there is a currency. There is a unit of value that exists, that is tradable, that is associated with it, and there's no analog to that.

Austin: The most generous numbers you could give is there are 20 million daily active users of Web3. That's probably the most generous number. I would guess it's probably more like 10 mil that are actually signing transactions each day in some form of self-custody capacity. That is a 20th of Twitter, which is the smallest social media network?

The amount of growth that is still possible in this space is hard to fathom, honestly. Will it get there? I personally think it will, but it's not a given. Every time you go through one of these boom and bust cycles in crypto, you see a whole series of concepts that people thought were going to be important fall away, and you see a whole new series of concepts come up in its place.

That's one of the most interesting things. The industry in the ecosystem is still very much figuring out what is the use case. That's not to say there aren't use cases, but there isn't one use case. Every cycle, there's a new use case that adds X percent more user base, X percent more utility.

David: Oh, man. I'm thinking back to the General Magic days and Go. Everybody thought the equivalent of the iPhone was coming in the 90s. Not then, but the Internet was.

I think that's a great spot. Let's talk about, what are you building now? How do Solana think about that question today?

Austin: Blockchains have a very interesting dual entity structure, usually. There is a foundation, which is the Solana Foundation, which is a Swiss Foundation. It's charged with the community treasury, it's charged with helping to be a neutral arbiter of the direction and future of the protocol. It's not fair to call it a standards body, but it's more similar to a standards body than it is anything else in that regard.

The reason it has a strict charter is so that it can't have investors that try and take it over, or change the function of the network and make it rent seeking, or something along those lines.

From its capacity, the goal of the Solana Foundation is to promote the adoption and advancement of the network, and that comes in many different ways. Sometimes that means building reference implementations, and then open sourcing those, and giving them to the community and saying, we made an investment in this early stage, basically R&D technology. Someone can now pick it up and build it. It's totally open source and free to use, and here you go.

That's kind of where you saw Serum was built on a bit of a reference implementation that the Solana Foundation sort of funded in the early days. A bunch of the lending protocols are the same way. Metaplex is the same way.

David: Candy Machine and NFTs. Metaplex, yeah.

Austin: Metaplex was basically a six-week sprint project by a bunch of engineers who were like, wouldn't it be cool if we envisioned what an NFT standard could be? That became the code that then the team at Everstake token launched Metaplex. $3½ billion of value has been created in just about a year using that. That's primary and secondary market transactions. There's no Metaplex token or anything like that. That's just the amount of value created through that network.

The function of the foundation is to support development of stuff that's either not economically viable yet, or it's too risky for someone to come in and be like, I'm going to found a company that's going to build the new NFT standard on Solana. That would have been hard to figure out.

David: What it really is like you guys are in the position and doing what you were just talking about, which is, hey, because this is a complex adaptive system as all markets and technologies, what the right things to build are, are things that are interesting and constantly changing. You guys are there to sort of push that forward and provide resources to do that.

Austin: Yes. There's also the other model, which is the for-profit unit. On the Ethereum world, this is Consensus. On Solana, this is Solana Labs. Consensus built Infura, Consensus built Metamask, Consensus built a huge number of these foundational technologies, products, and companies on the Ethereum ecosystem.

People kind of forget that nowadays, but they were all funded. They were all basically built in Consensus and then spun out of Consensus. That's kind of how a lot of that stuff got started. Solana Labs is doing similar work. Sometimes that is something like the Solana Mobile Stack and Saga, which is this crazy idea of building a Web3 Android phone.

David: We got to talk about that.

Ben: Okay, I want to put a quick. That one sentence is the next two things I want to talk about, Web3 and mobile. First, let's take Web3. You had earlier mentioned, every time there's some sort of crypto bust or new boom that happens, a bunch of old use cases that people thought were important sort of go away, or activity that the blockchain will serve to promote sort of go away and new ones come in. Sometime in the last two years, Web3 became a thing, and a lot of people started tweeting about Web3. To Austin Federa, what is Web3?

Austin: Web3 is a few things. On a conceptual level, it represents the idea that the next evolution of the Internet is a transition where users of a platform, a product, a network, are also owners of that platform, product, or network. That's sort of the philosophical transformation.

Web1 was the ability to read data from the Internet. Web2 is the ability to write data from the Internet. Web3 is the ability to own what you use on the Internet. We're not just talking about data here. We're talking about YouTube takes 50% of all the ad royalties that creators make. Off the top, that's a flat 50% tax on using YouTube.

You could see a model where you rebuild YouTube, and it's owned by the creators on YouTube, and it's built on blockchain. Yes, they still are going to have to pay some amount in order to run the network to the validators, but the ownership and the decision-making authority would actually be within the users of a platform.

Facebook users have no say in the moderation of content on the platform. App developers on Apple or Google ecosystem have no direct say in how those policies are implemented.

David: In its early days, but this, for sure, exists already. Braintrust is this, Audius is this, Fantom is this.

Austin: Absolutely. Every DeFi application works this way. It's a paradigm shift in how we are building things for the Internet.

Ben: I noticed none of this has an implementation detail. You didn't reference a blockchain there. You didn't reference a specifically any crypto assets. That was purely philosophical.

Austin: I would argue that Web3 could be stuff that doesn't involve blockchains either. There could be a new model of creating and funding a company that doesn't involve a joint stock corporation or something along those lines. That thing doesn't inherently have to involve blockchain.

Philosophically, it would conform to Web3 if the users of that thing are the people who benefit from that thing. It doesn't inherently have to be built on the blockchain. The blockchain is just the best thing we have to build it on right now.

Ben: It makes sense.

Austin: I would also say that another key component of the differentiation between DeFi Summer and Web3 is that Web3 is the expansion beyond overt financialization. Web3 includes things like NFTs. It includes things like gaming. It includes the ability to do things like sign in with a wallet address. It's sort of the expansion of these networks and the integration of them sometimes into Web2 applications and sometimes just into other sorts of new avenues.

The ability to do a blog that's now on-chain is something that was not really part of what people thought was possible in crypto beforehand. Again, everything is slightly financialized. Moving from overt financialization into this sort of different space (I think) is really where you start to see some of those changes taking place.

David: It's interesting. When you zoom out and think about it like this, there's been so much hype, there's been so much money made and lost in Web3, NFTs, and all this stuff over the last 12 months. It's like DeFi Summer, the ICO boom leading up to it. Whatever money people made or lost in the moment, this is an expansion of the concentric circles of what crypto writ large can do.

Austin: Yeah, slowly increasing the sphere of things that can be built on the blockchain.

Ben: It's kind of interesting. As you describe that line between DeFi and Web3, it's a little fuzzy. DeFi is part of Web3, but Web3 is not contained within DeFi. Because we haven't talked about it yet, DeFi being decentralized finance, those are things like staking my tokens, yield farming, or finding very creative, composed smart contracts that exist on a blockchain, that feed into each other, that can do interesting financialized things with the native token of the blockchain that I'm using.

All of that is jargon, but the outcome of that is I either have more or less money that I put into it. In terms of other use cases of a DeFi application, it's like, what do you mean? The goal is to have more money than what I put into it by some complex transformations that happen inside the composed set of smart contracts.

Whereas Web3 is like, well, sure, it uses those financial elements. You can benefit from owning your data, but the output could also be that you listen to music, or that you talk to a friend, or that you did any of the things that we're accustomed to doing on the Internet that just happened to use the input of the same native network token—SOL, ETH, whatever.

Austin: Here's the question. Is Spotify a fintech app?

Ben: Facilitates payments to creators.

David: You pay money. Users pay money and Spotify pays money to creators.

Austin: If you squint your eyes and you look at most Web2 applications, they're actually some form of fintech application. Moving it to crypto is the thing that makes it transparent. It makes it overt. The idea that you give money to an entity, that money just gives you some service, and then it distributes money out to a whole host of other different places. This is the idea that you either die a hero or you live long enough to become a bank.

David: I love that. By the way, all of this, we got to say, shout out to friends of the show, Modern Treasury. This is the reason they exist. Yes, you're right. Everything has financialization built into it these days, every piece of software.

Austin: Every piece of software.

Ben: You're right. If you could just describe an application as you pay some money into a system, you use it and get value out. Then the system moves money to an alternate party behind the scenes, that is many Web3 applications and that is many Web2 applications, or most if not all of both.

Austin: Yeah. You don't necessarily think of it that way, but the end goal of every Web2 product is to move money around the world in some capacity. That is unavoidable. It's almost like a tautology, because you're like, well, of course, the point of a company is to make money. Yeah, of course, the point of a company is to make money. This is how all of these things work. The exception being of course, open source software, which is an amazing side note.

David: But even there, Wikipedia is also a fintech app. They collect donations, they do donation drives. That fund is like the infrastructure. Money still moves.

Austin: Yeah, right? With all of these things, people are sometimes upset about crypto because they're saying it's making everything into a market. I would argue it's actually just peeling off the veneer and showing you that it's always been a market. It's turtles all the way down.

Ben: We're getting into the philosophical, highfalutin level here. It's kind of like that Elon Musk phrase that he keeps repeating, which I actually love, and I think is quite mind-expanding, which is that money is just a database that you can read and write to that allocates resource across time and space. And you're like, whoa, you really are a billionaire.

Austin: Sounds like a blockchain.

David: Speaking of total aside, but since it's in the news, we can all agree that the whole twitter bot thing is just because Elon doesn't want to pay that much money for Twitter. That's what's going on here, right?

Ben: Yes, and they probably also have a pretty big bot problem. Both of these things are definitely true.

David: Yeah, right. But if the market hadn't dropped 80% from the time he signed the agreement, he wouldn't be talking about this.

Austin: I've been on Twitter for a few years. It's pretty hard to be on Twitter and not know that there's a bot problem. This was not something that came up in discovery.

David: No.

Ben: Yes. By the time we released this episode, there will have been three more advances in this saga. But speaking of Saga, you like going into there, Austin?

Austin: Yeah.

Ben: All right. You guys did a pretty insane thing. You announced both a phone and a stack of mobile software services built on top of Android. Sorry, what? What was that and why are you doing it? And then let's use that as a framework to talk about crypto and mobile broadly.

Austin: This is a really great example of something that is not done by the Solana Foundation, but is done by Solana Labs. The expansion here is basically, right now, the vast majority, over 80% of anything in Web3 is stuck on the desktop. It's stuck on a desktop-class browser and it's stuck on a Chrome extension. It's crazy we've gotten this far with Chrome extensions.

Ben: Yup, and is that the case?

Austin: That's the case for a number of different reasons. Part of it goes back to the use cases of blockchain in the early days. It just weren't really compatible with the ethos of mobile. We can get into that a little bit, but the thing that was announced in late June here was the Solana Mobile Stack, which is a fully open source software stack that is built to make it easier for developers and users to transact on Web3 on mobile.

There's a whole bunch of different software components involved in this. The first is something called Seed Vault, which is really this way of not as secure as a hardware wallet on a ledger, but it's significantly more secure than any software wallet you've ever tried to use. We can go really deep on that.

That actually is writing to the secure element inside of a phone, and storing private keys on it, and using TrustZone authentication. It's using the same security stack that Face ID on a phone uses or a fingerprint reader on a phone. That's very cool and exciting.

David: We were talking the other day about this, you and me. There are only a very small set of companies and developers in the world that get access to that. You essentially have to be like Qualcomm.

Austin: Yeah. To do a fun sidebar here, most of modern phones security is based on this idea that there are multiple layers within a phone, and that there are very different levels of privilege as you get closer and closer to the hardware. Anyone can do anything in the browser. Android people can do less in Android subsystems. There's less you're allowed to do in it.

This is sort of the classic, why can't Zoom have my camera on when I have it minimized on an iPad? A lot of those sorts of things. A background application is just not allowed to have access to your camera, full stop. That was a policy decision that was made by Apple. You go down to the Apple level, surprise, surprise, FaceTime can have access to the camera once it's a background application because Apple makes it and they can give it a higher trust level.

You move down the stack, and eventually, you get to a place where you're dealing with an incredibly secure component of the processor. It's different in every company, but Qualcomm is the one that's in this phone, so we'll use this for an example.

Qualcomm has this thing called TrustZone. TrustZone is an incredibly secure virtual machine that's running on the processor. There are only a few applications that can read or write data to it, but any application can request data from it. Let's just say I'm a banking application and I say, hey, David has set up fingerprint authentication. I'd like to know if this finger that's touching this phone is David's or not.

David: Right. This is I'm logging into my Wells Fargo.

Austin: Exactly, right. In a classic system, you would sort of assume that, oh, well, Wells Fargo is now going to counter match your fingerprint against the fingerprint that is touching the phone. That's not how it works because at that model, Wells Fargo now has your fingerprint. They now have access to that biometric data. Instead, they just send a request to get the API down to TrustZone, and TrustZone basically says hot dog not hot dog. That's all it's giving you back.

David: Wells Fargo doesn't get your actual fingerprint.

Austin: Exactly. All it gets is a security pass/fail. If you pass, great. It unlocks it. If you fail, no, you can't get into the thing. What we've done here is worked with OSOM. They are just top tier hardware and software manufacturer. Jason Keats is the founder. He was the original architect of the original iPad Pro.

He worked on a ton of secret stuff at Apple that he still can't talk about, which is particularly fun when you're getting drinks with him. You get to a point where is like, and then we, well, we can't really talk about that yet, which is the best thing to hear from someone. He also built the door for James Cameron's submarine. He was the lead architect at the Essential Phone. Just a world class hardware engineer here.

David: The Essential Phone being that was part of Andy Rubin's company that came out Playground. Of course, the Original Android Team and company, which as we covered, was acquired by Google for $50 million. It keeps getting better.

Ben: It keeps getting better. Because they've been building phones for a decade at this point, they are authorized by Qualcomm to actually write software to that TrustZone. What we have worked with them to do is be able to store BIP39 seed phrases in that secure element, in the same place that you would store a fingerprint, a Face ID print, or credit card for Apple Pay, Google Pay, or something like that.

David: This has been at least one big blocker to mobile adoption for crypto. Are you really going to type in your seed phrase on a phone on a virtual keyboard?

Austin: Sure. It was just like the risk of, oh, I downloaded a fake copy of Phantom or I downloaded the wrong thing. The risk is really high there. By storing it in here, it's much more secure. Once we've solved that problem, the ethos of Solana is you got to do the hard thing before you do the easy thing. Doing the hard thing is just baked into Anatoly's DNA.

He's like, we got to solve the hard problem and then we can solve all the easy problems. Easy problems are never easy, they're just slightly easier to solve. On top of that, then this was whole mobile wallet adapter, which is a way you can talk to that seed vault and request signing.

Ben: And these are the Solana mobile services things, right? These aren't unique to that Saga phone?

Austin: Correct. The entire Solana mobile stack is open source. Anyone can grab it and use it. Our engineers at Solana Labs don't even have permission to program for TrustZone. It's that access control. You do need a manufacturer of a phone to really do that implementation work to put the seed vault on the device. But once that's been done, the rest of the stack and also that code is fully open source. Anyone can take it and put it on the phone and start using that.

David: Samsung, LG, Oppo, or Apple maybe?

Austin: Sure.

David: Could grab it and use it.

Austin: I've never used the word trivial when talking about firmware engineering, but it's as trivial as firmware engineering gets to take it from one Qualcomm phone and put it onto another Qualcomm phone if you're the manufacturer. Once that hard problem is solved, it unlocks a whole bunch of possibilities that we haven't even really begin to think about.

One of the biggest issues with crypto right now is that everything on mobile is controlled by Apple or Google. Apple and Google, they're services businesses. They want their cut of transactions that happen on the phone. But the very nature of blockchain means that the entity selling the thing or facilitating the transaction is usually not the original creator.

The idea that there's a 30% margin or a 70% margin somewhere that Apple or Google could take 30% of, and that via an economically reasonable transaction, that's just fundamentally incompatible with the way Web3 works. If you're using Magic Eden, OpenSea, or something like that to buy an NFT, their margin is 2%, 1%, ½%. It's incredibly razor thin margins because it's a decentralized application. It's not built in that same sort of way and structure.

You really need the ability to run a decentralized App Store, which is just simply an app store where you can use crypto-based payment methods. You can totally bypass the Apple and Google tax that's being imposed here. The same way that a Samsung store on a Samsung phone is an alternative distribution channel for applications.

Ben: Just to flag something to disambiguate, there's the UX issue, where when you're setting up your wallet on a phone or something, it's annoying to type in your seed phrase or there are going to be things that are more cumbersome than what exists in the typical way that we use phones if you aren't using anything in the crypto ecosystem.

But then there's this whole other issue of, I know the apple system better than the Google system, but if you're purchasing a virtual good, something that doesn't exist in the real world—I'm not buying groceries—then you have to use the in-app payment system as a requirement. Everything in the blockchain or at least the most valuable applications of blockchain are for fully on-chain assets and fully on-chain applications.

Austin: It's all a digital good.

Ben: Right. That's where you run into a brick wall, where it's just like, what? We can't use the in app purchase system to transfer SOL from this user to this other user via a smart contract. It's not even denominated in USD, let alone even us having a conversation about the cut. It's impossible for us to use the in-app payment system, so a standstill.

Austin: Right. It's a totally weird, wacky system. Especially games in general built on blockchain, they're usually not using USDC. They're usually creating some sort of in-game token, the same way that Fortnite got its own in-app currency. You purchase that using US dollars, but there's no reason Fortnite can't use the Solana dApp store, and distribute itself through that, and start taking USDC or some crypto payment in order to buy in-game Fortnite currency.

All of these things are possible, because the phone itself now has the custody. The phone itself will hold crypto assets. It's a secure-enough place that you can trust it to hold a significant amount of assets in it.

On top of that, the fundamental models there where the store is an opaque box, where developers have no idea what the moderation policies are, this dApp store is going to be governed by users and developers. There's going to be direct involvement in how those policies are made. It's not like the DAO is going to be voting on every single application to approve or reject it, but if there is an appeal, that can go to a vote that is owned and controlled by the actual users of both the phone, the SMS stack, and the developers of the platform.

The arbitration process—I wouldn't even call it arbitration—is like open source. It is the same process where we say, in Linux, here's a proposal to add something to the codebase. What does everyone think about it? Is this just a good idea or is this actually the right implementation? How are we going to support it?

Through that process of human social consensus, you can decide what are the appropriate moderation policies. Of course, if someone submits a fake FTX app, there's got to be a way to nuke that thing. That's just basic user safety. But that process of determining what is allowed and what is not on a conceptual level, that has to be in the hands of developers and users.

Ben: Fascinating. The headline is always Solana launched a phone, which is neither pedantically true nor actually the most strategically interesting component of this. It's like a company that Solana partnered with, launched a very, very nice high-end piece of hardware that sort of will end up being kind of a Google Pixel–type thing for many other people who consider implementing this mobile stack as a part of their phones. But of course, this is going to be an amazing phone.

The more interesting component and true component is that you took this first big step for basically all of crypto by introducing the idea that here is a set of mobile services that an OEM can bring on, and we are doing a hard thing which most people have shied away from because it hasn't worked historically, which is launching our own app store that lives alongside the Google Play Store, in this case, the dApp store.

We believe that there is such an impediment to users having the experience that they want for a growing set of users that there's going to be meaningful-enough consumer demand to bootstrap a second new app store, at least on Android devices now, and tilt the negotiating position with the existing powers that be in mobile, and say, hey, we have to consider doing something like this now.

Austin: Solana Labs is absolutely not trying to take on Samsung and Apple. There are no qualms that that is not a tree worth barking up here. The goal really is to move the goalposts.

Saga is a fantastic flagship device. If you look at the comparative specs on Apple or Samsung, you'd spend about $1300–$1400 on a phone of similar specs. This thing is $1000. If you're an Android user, this is just a good deal. You should probably check out the phone, even if you have no interest in the Web3 stuff.

Looking at the Web3 stuff, the goal really here is to show that there's a market for this, that people are willing to switch from iOS to Android, because they're tired of having to leave a dinner and pull out their laptop to do an NFT mint. Or you see that, oh, this NFT is really spiking in price, I got to get back to my computer so I can delist it, because I want to sell it for more an hour or something along those lines.

If you work and you live in this space, you all have a friend who's either had to cancel on you or been late to something because they were stuck with their desktop. It's very funny. Every crypto conference, you can always find someone at a fancy restaurant back there in a corner jamming away on a laptop. More often than not, it's because they couldn't transact on their phone.

Sometimes it's me and sometimes it's because something broke and I have to do a comms thing. But usually, it's someone who needs to transact on the blockchain, and they can't do that through their mobile phone.

David: Of course, what you're describing is obviously for super power users. As you said, there are probably 10 million daily active users of crypto apps, period, right now. But it's not about the applications today, it's about enabling applications tomorrow, right?

Austin: Absolutely. If you watch that original iPhone reveal and the breakthrough internet communications device, I think a very few people would have looked at that and said, camera, multi touch, beautiful screen. The next jump is we're going to change dating forever. That's exactly what happened. You had Tinder, you had all these different applications come up.

Ben: Or even that could have predicted Uber.

Austin: Or they could have predicted Uber. The fundamental social fabric of the world was changed because the device had some new features. That's just such a wild concept to think through. Uber would have cost a billion dollars to launch without mobile phones.

David: What would you even do?

Austin: I'll give everyone pagers? I have no idea. You'd page a number, and then they'd page you a license plate back, and then you'd have to bring out a bunch of… It wouldn't have worked. It would have been (again) like General Magic back in the day.

Ben: I want to move us forward from mobile. I'm glad we spent the time on it, because I do think it is a thing that the absence of mobile activity and the structural inability for there to be mobile activity to this point has been a governing force on the adoption of all things blockchain based.

I want to go through a little bit of a lightning round here as we drift to a close with you on other topics. One of which being the buzzword of the day, which is the metaverse. I'm curious how you either would describe it, like if you were to define it or how you would segment it to say some people are talking about this and other people are talking about that to help add some clarity to what is otherwise a very murky term.

Austin: I would say the best way to think of the metaverse is it's the information superhighway. It's a catch-all term for a whole bunch of different ideas. We're probably going to use a totally different term in a few years when the stuff actually catches on.

There are many different versions of what the metaverse is. I think the most useful framework to think about it as, is it's a series of open and interconnected APIs that are going to allow different systems to interact with each other in a space that makes sense to users. Maybe that's AR, maybe that's not, but the idea of the walled gardens that exist on almost every Web2 system are not going to exist on Web3.

I think that's the most intellectually honest definition of the metaverse. It's just a process of breaking down those walls, so our digital lives, our digital identities, our digital assets are much more interoperable and intercompatible. Who knows what we build on top of that? Maybe that's crazy AR stuff and maybe that's just the ability to text an iPhone from an Android phone and not have it go through a text message.

Ben: I think it's interesting to hear. The way you talked about this is totally different than the way that Facebook, now Meta, would talk about theirs, which is much more as a user interface paradigm. What I heard from you is, it's a way of interacting with other people where you bring your own assets or you potentially use Rails you own or something.

Austin: Any definition of a concept that's attached to a piece of interface tech, I think, is a fundamentally flawed definition of a concept. Imagine if we describe computers as using a mouse and keyboard. That would be a completely inadequate definition of what a computer is and wouldn't be a helpful definition for anyone else in the future.

Okay, so gaming on an Xbox is not a computer, but gaming on a PC is a computer? All of these things, whenever you lock it into an interface paradigm, it just feels intellectually lazy. I would say that the reason Meta wants to define it this way is because Meta's moat is money. They have more money than anyone else, except Apple.

Ben: And 10,000 hardware engineers at this point.

Austin: I don't know what 10,000 hardware engineers are doing. OSOM has like 40 hardware engineers. Genuinely, I don't know what 10,000 engineers are doing.

Ben: I think it's actually like Bell Labs–type stuff. I think it's stuff that otherwise would be in public research institutions. I think we're inventing new display tech.

Austin: Yeah, which is awesome. I'm glad someone's doing that stuff. Defining the metaverse as something that's capital-gated, I think, is not a helpful definition of what the metaverse is.

Ben: When you hear someone to pitch you, because you get pitched on a lot of different ideas, and they say it's a metaverse blah versus it's a Web3 blah, what are the things you think of metaverse but not Web3 and Web3 but not metaverse?

Austin: I'm going to be honest. The volume of metaverse pitches is a fifth of what it was six months ago.

Ben: Interesting.

Austin: It is not a term that I am seeing. This is just my limited perspective. I am not seeing metaverse be a sticky term. I am seeing people talk much more about creating experiences or creating community spaces and virtual worlds.

The idea that this thing is is wrapped up in a metaverse, or that it's wrapped up in a user interface, or it's wrapped up in a specific technology, I think it's really starting to fade, at least in my experience.

What we see people talking about is that they're building open digital communities that often involve AR or VR. They're building some form of a digital avatar. A metaverse is baked into the Facebook definition of a metaverse, that there's a place you go to, and that place is the metaverse. This is a very Ready Player One. I've logged into the metaverse.

Ben: It's canonical.

Austin: I put the glasses on, I'm in the metaverse, I take the glasses off, I'm out of the metaverse. Because there is no space that everyone has agreed upon is a metaverse, I think the idea that you're building for a metaverse, the metaverse, or one version of the metaverse, isn't really catching on with developers because they don't have something to build against.

Instead, it's more of a series of processes and approaches that say, maybe we're building a game, maybe we're building an NFT collection, maybe we're building something else, but the way we're going to build it is with interoperability and interconnectivity from the start, which is a huge paradigm change from when Bungie makes Halo. They're not even thinking about cross console play at that point.

The metaverse folks nowadays are the folks who are building things that maybe six months ago, they would have called metaverses. Open Era is a great example. All of them, what they're really talking about building is stuff that is meant to be portable from the ground-up.

David: The analogy doesn't totally hold up, but it reminds me of electric cars before Tesla. Other manufacturers made electric cars. We can use profanity on the LP Show. They were pieces of shit. They almost intentionally put the wackiest stuff on there. They looked crazy. They were not like a car that anybody would ever actually want to drive.

Elon's Tesla came along and was like, no, we actually want to make a better car that people want to drive, like a car. People like cars. It can be better by being electric. Let's not make it look crazy. We'll make it look beautiful, not like, it's got weird fins and stuff on it. That was what people wanted.

Austin: Remember the really early days of texting, when you could only text people who were on your cell phone carrier?

Ben: Yes.

David: Right.

Austin: Or you could only port your number from one Verizon account to another, or calling between T-Mobile and T-Mobile was free, but calling to Verizon cost you money. If someone had pitch that as the communiverse, everyone would be like, what are you talking about, man? That doesn't make any sense. It's the slow process of creating interoperable systems that then just enable new things to be able to happen.

I think that's probably the best definition of a metaverse I can give. Who knows? Maybe that world won't come to pass. Maybe what we'll see is instead, a bunch of community-owned walled gardens as opposed to corporate-owned walled gardens. That's entirely possible.

All we ended up doing is rebuilding this stuff, but in ways that it's owned by the community. I would call it like the Reddit model, where each subreddit is its own little island, but it's owned by its community. You could see that being the model or you could see a model where it's more open and everyone has access to it.

Ben: Cool. Okay, continuing our lightning round. Last two topics. You told me you're getting a small fraction of the pitches involving metaverse as you were hearing six months ago. Give us an update on the same thing with NFT-related ideas, and how are people talking about those now versus six months ago, and then same thing applying to DAOs.

Austin: NFTs are going crazy, genuinely. In August 1st of 2021, there were maybe 2000 NFTs on Solana. Today, there are over 15 million NFTs on Solana. It is just an astronomical acceleration there, and it continues to.

David: Mostly on Metaplex or the other?

Austin: Yeah, 99.9% are built on the Metaplex's back, but they are just continuing to expand. There are new NFT projects launching every day. What's really cool to see is it's not just new projects launching, its existing projects beginning to sort of like find their ground and be able to figure out, we'd launched an incredibly successful profile picture collection. How do we build a brand out of this?

One of the things that I find particularly fascinating about NFT is that almost every brand that's tried to take IP that they developed external to blockchain and bring it onto the blockchain, it's been very poorly received. What we've seen is that this IP that's generated on-chain is actually starting now to move off-chain.

The biggest and best example of this is Bored Ape Yacht Club on Ethereum. Now there's a Bored Ape Yacht Club theme in fast food restaurants opening up. There are all sorts of stuff like that. Sure, it's a little bit gimmicky. It's a little bit of a toy, but everything is a gimmick and everything's a toy at the beginning.

Then you look at something like the Degenerate Ape Academy on Solana, which was the first really big project that hit. That was in August of last year. They've launched two or three sort of spin off collections at this point. You really see a path where not necessarily them, maybe them, but something like that.

It has the bones to become the next Marvel. It has the bones to become the next Disney. These characters, this idea of a community-driven story, and this IP that has a lot of just vibes around it, you can really see this becoming something where there are TV shows, there are movies, there are comic books, there are lunch boxes. There's a whole nine yards of any sort of beloved IP monetization. It's all starting on Web3, and it's all owned by communities.

Maybe if your specific Ape becomes the one that everyone loves or it comes featured in a TV show, you're going to get perpetual royalties on it, the same way that an actor gets perpetual royalties when their film is rebroadcast or their TV show is rebroadcast. It's a really interesting model there.

That's kind of on the art side. The additional thing is people are starting to use NFTs in really new ways. There's nothing about an NFT that actually means it has to be immutable. People like to think of them. They're like, oh, NFT has to be immutable. It actually doesn't.

Ben: Nonfungible, but it's not necessarily immutable.

Austin: Right. This is true. If you read the original ERC-721 spec, there's nothing in there that says, oh, and it will never change. There's always been this idea of upgrade authority. You will see NFT projects that are now suddenly building games.

Your NFT will suddenly gain a new trait. It will have like lives, attack, or something along those lines added to it. Or you will start to see something like Parcel, which is a real estate DeFi application. They've been toying around doing NFTs that represent actual pieces of real estate.

The nonfungibility doesn't have to be attached to artwork. It can be attached to specific types of financial instruments as well. If you have everyone's favorite example from 2008, a mortgage-backed security, that could be represented as an NFT on a blockchain. There are abilities to do all this kind of new stuff with NFTs.

Their EmpireDAO in New York city, which is this Web3 coworking space that Solana Labs has one of the floors in it...

Ben: Is it actually a DAO? Is it actually a community-owned and governed coworking space?

Austin: Yeah. There's a legal entity to sign the lease, but yeah, exactly. It's pretty cool.

Ben: Cool.

Austin: You guys should come check it out next time you're in New York. Their door access system that they're building to get in is going to be an NFT with a rotating barcode, like a two-factor code. Because it's proof that you have that NFT, and it rotates like a two-factor code would, that's how you can get into the building.

Ben: I see. The NFT itself rotates every once in a while, so it's not like anybody could just screenshot and be like, here's this screenshot of an NFT from six months ago.

Austin: Right, which is very interesting. It's different ways to do proof of ownership.

Ben: Okay. Same question then on DAOs.

Austin: I think DAOs are still finding their footing. There's a whole bunch of DAO infrastructure that got built for Solana, which has had a lot of early success. Mango uses it a bunch of other ones. It's called Realms. It's like the front end for it. SPL governance is the governance contract.

You saw a lot of attention in the bull market for things like, we're going to buy a golf course, we're going to buy a stadium, we're going to buy whatever.

Ben: A blimp in the Acquired community.

Austin: Yeah, we're going to buy a blimp. One of the ongoing challenges with DAOs is that they often try to acquire things in the real world. Things in the real world often require upkeep, taxes, a signatory, and a bunch of things like that. That's like a model that no one's really fully cracked yet.

I think Packy talks about DAOs as a chat group with a bank account. That's sort of like your MVP of a DAO. I think that's been really successful so far. The other way to look at DAO for more crypto native stuff is their upgrade authority. They're a way of making sure that the people who are participating in something have the ability to vote in it.

Going back to our mobile conversation, the dApp store is going to be governed by a DAO. There's going to be a way that the people who own the phone and are developing for the network can vote on-chain, on policies, on changes, and on other sorts of things like that.

Obviously, token-based governance has existed for a while, but wrapping it into a structure of a DAO formalizes the arrangements a little bit more. It's like putting Robert's Rules of order around a city council meeting. It just gives you a framework to work under that helps the process move more smoothly. But we'll see. I am so excited for the future of DAOs. They haven't found their breakout moment yet.

Ben: Austin, as we close here, is there anything we didn't talk about that you think it is worth leaving listeners with?

Austin: I think it's worth talking about a little bit the bear market that we're in right now. You've seen a massive drawdown in the market caps across all crypto assets. If you go on CoinGecko and look at the market cap number there, it's somewhere below 1 billion right now. It was 2.8 or so just back in November. That's a pretty massive drawdown.

There are a lot of ways to look at that, but there's really never been a better time to start building on blockchain and in Web3. The reason for that is if you launch a product in a bull market, there's so much noise and there's so much noise you have to cut through. You're not really sure if you found product-market fit or if you've just found hype-market fit.

It's a really great time to sort of get involved in building no matter what network or chain you're building on. Building in a bear is very much what you want to do. This is how Salona launched. You get to build with a little bit less excitement, a little bit less fanfare. You get to figure stuff out. Then when you do see a resurgence of the market, you're ready for that.

The other piece of this is this is a very different bear market than we had in 2018. You saw users leave. Ethereum activity dropped in 2018. There were objectively fewer people using the network after the price dropped. Here, you're not seeing that. You're seeing that the number of active users across all chains is continuing to go up even as the prices again have fallen off a cliff. That's the strongest signal here that this tech is going to be around in some form for the long-term.

Ben: It's fascinating. It's also decoupled. The 2018 one was decoupled from macroeconomic financial event. This one is not. This one is directly correlated. It's almost like this bubble popping is less intrinsic to crypto itself and more about, oh, everything was overpriced in the world—house, stock, crypto, whatever, you have it. I think that's a big distinction that people should sort of try and reason through, too.

Austin: Yeah.

Ben: Okay. Austin, thank you so much. Frankly, I want to do one of these every six months with you because I think this landscape evolves so quickly that it's just really helpful to get your views and data on watching this ecosystem so closely, but also to get your redefinitions of everything, I find to be very, very helpful in interpreting this world.

Austin: Thanks, guys. This is just a ton of fun. I think that Acquired has been something I've been listening to for years. Watching you two go through the journey of becoming a podcast that's doing more work in crypto is really exciting too and just how that changes come about. This is great.

David: You're a big part of it. Thank you, sir.

Austin: Thanks.

Ben: Thanks, Austin. All right, listeners, we'll see you next time.