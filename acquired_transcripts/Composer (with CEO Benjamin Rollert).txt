Ben: Hello, Acquired LPs. Welcome to another great episode of the LP show. David, this was a delightful interview with Ben from Composer.

David: So, so delightful. We covered so much cool stuff, the evolution of the whole WallStreetBets community. I just love it. It's like that's so great that that was like a thing, but some percentage of those people are really smart and are going to become great investors, and that's what Composer's there for. That was such a cool part. We talked about Packy, our mutual friend, and Composer being the first Not Boring capital investment memo.

Ben: Yeah. Also, Ben has a very interesting philosophy on how to run a company and how to go about building products so it's interesting. For most listeners who don't know what Composer is, it's a no-code tool for private investors to create your own hedge fund-like strategies. It was fascinating hearing about the origin story of how he arrived at that and then going deep also on all the Wall Street bet stuff and understanding market-making and dark pools. If you want to better understand that world, it's a good episode for you.

Before we dive in, we want to thank Tegus and I have sort of a fun anecdote to share. Tegus has this cool product feature where they send you every weekday morning the daily interview digest, and there are 40, 50, 60 new interviews that get posted every single day on the platform. I was actually using it to help figure out what our next episode is going to be because it's like a whole bunch of ideas of not only here are some names of companies that investors are interested enough into commission research, but then, of course, I can actually go and listen to the transcript and decide if there are interesting nuggets in there that we want to tell on the show.

I know that's not the core use case, most people use it either as investors themselves to be able to do research on companies, or if they're in a corp dev or a CEO and you want to look around at your competitive landscape or companies you're thinking about acquiring, it's a great tool for you to do that. For us, it's actually pretty awesome to be able to source content ideas.

David: Gosh, I know we say this every time and maybe listeners are sick of it, but it bears repeating. Every day, 40, 50, 60 new interviews get added to the platform that you get access to. That's so great. That is incredible compounding in this whole product sector where before Tegus, those interviews happened, the interviewer got that data, and it just disappeared.

Ben: Before I've mentioned, they have research on FTX, Roblox, DoorDash, Airbnb, and TSMC. Other companies, I'm just going to read just in today's digest, fascinating to get you Coupang, Constellation Software, a few former Facebook Meta folks, Alphabet, Hasbro, LVMH, or monday.com. It's just an unbelievable wealth of information.

If you want access to this and you want a free trial—thanks to being an Acquired listener—you can head over to tegus.com/acquired or click the link in the show notes and just tell them that David and Ben from Acquired sent you when you get in touch.

Lastly, as I'm sure the good folks at Composer would want us to let you know, none of this is investment advice. We may have an interest in things we discuss on the show. This is for informational and entertainment purposes only. With that, on to the interview.

David: Ben R., I love it when we have Bens and Davids on the show. Ben R., welcome to the Acquired LP Show. CEO and co-founder of Composer. It's awesome to have you here, and you have the noble honor of being the first Not Boring portfolio company.

Benjamin: That is correct, I think.

Ben: Braintrust?

David: I think that was later.

Ben: Oh, not to be on the LP show. You mean the very first investment from Not Boring.

Benjamin: That's correct. Composer, I believe, is the first investment by Packy's Not Boring fund. He was the first money into Composer as well, so first-first on both sides.

David: He was the first money personally and then you were also the first Not Boring portfolio company, amazing.

Benjamin: Yeah.

Ben: That's probably a good place to start. Speaking of Not Boring and our friend Packy McCormick, before our episode here, I texted him and I was like all right, what should we ask Ben when we have him on the show? He said, maybe you should kick it off by asking him about doing a venture in the Philippines, which I don't know a ton about your background. I only know about Composer. What's going on there?

Benjamin: I've done a lot of wacky things. First off, I'll preface that I'll be totally open and at this point not even particularly insecure about the fact that I don't have super polished blue-chip credentials. To get my foot in the door, I've done a lot of pretty wacky things.

At the time that I left for the Philippines, I was working for, frankly, a pretty janky startup in Montreal. I got this opportunity serendipitously through a connection of a connection that was like well if you have ideas, you can pitch this VC fund in the Philippines. I had an idea that at the time didn't really make sense but I flew all the way to Manila to pitch this idea to this VC fund because at that time there were no VCs you could really pitch there.

David: The motivation was funding to do this?

Benjamin: It was funding actually, it was just whatever. It just sounded like a wacky thing. They had an opportunity. Why don't you come pitch? Incubate some things. You have an interesting profile, why don't you come to pitch us, and they were interested because they're like we don't normally get people from Montreal, so why don't you come by?

I flew in, pitched them, and they were like, we like you. Your idea doesn't make a lot of sense, but why don't you just come work for us? I said, okay. I moved to the Philippines and lived in Manila for almost a year working in a venture there. I knew it wasn't going to be a long-run thing. They knew it wasn't going to be a long-run thing.

Frankly, I made very little money. It was not like what you associate with venture. It was a relatively junior role, but it was so much fun. The interesting thing at that time was that the fund was very small, it was called Kickstart Ventures. It was like a subsidiary of Globe Telecom, one of the big telco companies there, but it was very small at the time. It wasn't much money that they were managing. Now, they're actually super successful. They have multiple funds, they're doing super well. They're one of the biggest venture funds in Asia. I learned a ton from the CEO of that venture fund.

Ben: What's the name of it again?

Benjamin: Kickstart Ventures. Unrelated to Kickstarter. Everybody go, that's so cool. You're working for Kickstarter? No, I'm working for Kickstart Ventures, it’s a VC fund. The CEO of the venture fund, Minette, I think she is the best boss I've ever had. She's the most capable person I've ever worked for. She started really from nothing. She was managing malls at one point and then she kept rising up. She's one of those impressive people I've ever worked with. I learned a lot from her, actually.

The people there were brilliant and the companies there were super interesting. Superstar for capital. The check sizes at that time were tiny. Things have really changed since then, check sizes could be like $50,000 for a sizable percentage of a company. I really saw it there, it's so wildly unfair in the sense that where you were born, where you live, affects so much.

The funny thing is I was coming from Montreal. If you want to raise money, the valuations they're still discount, right? At that time, they were like a fifth of Silicon Valley, the valuation you're raising, and it was just local sharks who would fund you at that time. He owns a nightclub and a restaurant and he's going to invest in an app for Montreal or whatever. Then I go to the Philippines and the valuations are even lower, considerably lower, salaries are a tenth, and costs are lower there. Costs are going up everywhere in the world, so it was pretty fascinating. I think things are very different now. I should check in.

David: What time period was this?

Benjamin: This would have been like six or seven years ago, at least, or more.

David: I'm sure things have changed just so dramatically on that front with the [...]. We'll get into how you're building Composer completely remote. You're off in the middle of nowhere right now and that's all possible now. Okay, so, tell us what Composer is for folks who don't know.

Benjamin: Absolutely. Composer is an automated trading platform that allows investors to easily build a portfolio of systematic trading strategies. Instead of struggling to implement strategies yourself with endless lines of code and spreadsheets, Composer breaks the strategy creation process into building blocks that can be infinitely combined using our no-code visual editor.

Then once you create an investment strategy, Composer will automatically execute trades based on the strategy's logic. If you're not ready to create a strategy from scratch, you can choose from our collection of vetted premade strategies. The whole pitch here is Composer makes those kinds of strategies that are used by top hedge funds as easy to access as stocks or ETFs.

David: By strategies, I think a lot of Acquired listeners will probably be like well, my strategy is I think Amazon is a generational company, XYZ, Tencent, or pick whatever. I'm going to buy and hold that forever.

Ben: David, don't reveal my strategy

Benjamin: That's the funny thing, everybody has a strategy, right?

Ben: Mine just doesn't hedge anything.

Benjamin: They're just varying degrees of sophistication. Technically, you could do that in Composer. What I love about something like Excel that is so compelling is that you could do really simple almost stupid stuff with it. You can use Excel as an overpowered calculator to add three numbers.

David: I do that all the time.

Benjamin: Yeah. You could create a strategy that is 100% allocated to one asset, which in this case would be Amazon and that would be your strategy. I just think the Composer might be overkill for that. You could do that in other ways.

David: There's this great app called Robinhood that we're here to tell you about.

Benjamin: I think defining what a strategy is in the context of Composer, is an interesting question. I think it's this idea that you have some sort of repeatable role that you want to automate, with the operative word here being like automated. You don't really need automation if you want to buy 10 shares of Amazon because it is a one-off thing, you're done. A lot of people, if not most, actually do want to do something on an automated basis. That was the original value prop of Robo Advisors.

David: Automated rebalancing.

Benjamin: Exactly.

Ben: Or even like investing a part of your paycheck every month or dollar-cost averaging into whatever your bucket is.

Benjamin: That's a strategy. A strategy doesn't have to be ultra-high-frequency trading where you're trying to move closer to the exchange to shave off nanoseconds of execution time. That is a strategy too, but that's a pretty complicated one. It can be as simple as I want to rebalance 60% stocks and 40% bonds on some cadence, and that's a totally valid strategy. Composer obviously enables you to do considerably more sophisticated strategies than that as well.

Ben: Is it a productivity tool on top of places where I already custody my money, or do I say thanks, Fidelity, it's been great, but I'm actually investing my money with Composer now?

Benjamin: Our focus is on the latter and the reason for that is that in practice, it's just such a better user experience. Right now, we allow you to authenticate with Alpaca, which is a third-party brokerage, and we're not a clearing broker custody ourselves. Something that we're about to release that we're super, super excited about is that we are integrating so that it will be like funding a Composer account. We're white labeling a broker so that you go to a Composer, you open an account, you transfer the money to what feels like Composer. Most of these trading apps actually have a partner on the backend.

From the perspective of the customer, it will feel like you are just interacting with Composer and that just leads to a much better user experience. Without putting any other app down, some of the ones that I've seen that sit on top of other brokers, the connection to that data is constantly breaking, it's constantly getting fried. It's just janky.

David: It's probably also things are not executing that fast too, which depending on your strategy may be important.

Benjamin: Yeah, exactly. I think Apple learned that a long time ago. Generally speaking, when you integrate different parts instead of making them modular. Modularity sounds really cool in theory. What we've learned and I think product designers have learned over and over is that when you integrate things, you just get much more seamless experiences because you have more control.

David: How old is Composer? A year and a half, two years old? Something like that?

Benjamin: A little under two years. We officially incorporated it at the end of April 2020. It's a COVID baby.

David: You raised a seed round from amazing investors like Packy McCormick individually and Not Boring Capital, but also First Round Capital and plenty of other awesome folks. You've raised a seed round and not technically, but from a user experience perspective, basically, you feel like a brokerage.

It's freaking amazing that a company can stand that up in this day and age in that amount of time with that little amount of capital. That would never have happened 5, 10 years ago. That's one. Two, how the hell did you do that?

Benjamin: What's happened is the ecosystem has evolved and that kind of answers the why now where you don't have to go into this super long relationship with these legacy dinosaur banks to become a trading platform. I think it's helpful to break down what goes into a platform like ours, and I think if you break down our value chain, there are three main categories. There's data. Every trading app or platform needs data. It ingests data, then you make some decisions on top of that data. That's like the trading logic.

Ben: That data is like, hey, what's the current price of all these assets?

Benjamin: Exactly. Data is like what's the market price of this asset? A lot of it's just that, frankly. That's a huge part of it. Then taking those inputs, you make some decisions on that, and then the output is orders. You make trades and you have to send those trades. At some point, they have to actually clear with some bigger broker or that you sent it off to work on exchange. These apps send it to other sorts of pools like hedge funds or whatever as market makers. Anyway, you have to send an order off and that order has to actually execute.

What we did is we put all this value chain on a drawing board and said okay, data, there are APIs that provide data. We don't have to build that from scratch. Then trading, brokers are actually becoming more and more commoditized. That was part of the market analysis we did. We said okay, all these brokers are now offering commission-free trading. Clearly, this is maturing to the point that it's moving towards commoditization. It's no longer that differentiated from a technology. At that time, there still weren't that many good APIs, though, so it's not that mature.

David: It's not the equivalent of there was Plaid for like a brokerage platform.

Benjamin: No, not really not as seamless as Plaid, definitely not, it's still heftier than that, although there are new entrants that are really changing that. Something like an Alpaca, we work with them. Alpaca is an API, it's a modern REST API where you make API calls with instructions to that API to buy or sell some quantity of shares of securities. There's also Embed Financial which launched recently.

There are these new entrants that are coming in that are trying to be sort of like the Stripe of trading. A lot of companies don't have to handle the incidental complexity and all the crap that goes into billing or payments because of Stripe. They can really focus and specialize where they add value instead of this undifferentiated heavy lifting.

Just like you saw with cloud to AWS and GCP, all these sorts of primitives, all these building blocks were starting to form in the industry that made it a lot easier to build a company like ours. Having that ecosystem readiness is so essential to something like this. It's all about timing, this stuff is all timing, and we saw that opportunity. It was still early though.

At that time, it was still early. Alpaca, at that time, I think had just raised like a series A, these were not mature companies, but I could see that being a Canadian here for a second, you want to go to where the puck is going to be. You want to go to where the puck is going to be, we saw where the puck was going to be in, and that's what we saw. In those three components, the trading logic or the strategy layer, nobody's really done well at all actually. That you still have to do it in Excel or do it in Python.

Ben: There are B2B companies. No one's made this for individuals. There are plenty of people that would do software for financial advisors or for hedge funds, but hedge funds are typically writing something proprietary.

Benjamin: Yeah, it's mostly proprietary, even that software, I guess. The stuff I've seen is really either kind of janky or it's old-school B2B legacy software. I don't know of any well-designed web first modern consumer-grade UX for this problem. I was solving a problem that I had and so I looked around, I was like okay, there's nothing.

Ben: How did you pick a segment and a business model for this? It sounds like you could add value for anyone who's investing and then the question is, okay, who do you go after and how do you monetize it?

Benjamin: In terms of our target customer, the main pain point that brings our most fervent early adopters is that they had a similar problem as I have, which is they're trying to cobble together some Excel spreadsheets, they're packing together Python, R scripts, or whatever, and are just failing.

To be clear, not because they're stupid. A lot of our early adopters are engineers. A lot of people work in tech and are technical. I think that will only grow. The number of technical people is growing. Even then, it was just not worth the pain and misery that went into this. Even if you're a programmer, it's not that fun to just deal with lots and lots and lots of incidental complexity in a dev environment. Some people like that stuff, but most don't.

You ask a lot of programmers, what part of the job you don't like? They're like I don't like DevOps or I don't like doing crap that I'm just redoing something that just has to get done but it's not intellectually stimulating.

A lot of the actual dev work that would go into setting up the automated trading system is very laborious and not particularly rewarding because it's just crap you have to do. Then obviously, a lot of our customers aren't engineers. What about all the people that can't code, which are still a lot of people, or people who know a little code. I think there's a huge market that's kind of ignored. It's going to keep growing. People that are not professional software engineers, but they might write some custom functions in Excel. They're a little geeky, analytical, and we get a lot of those people too.

Ben: I mean, BI is a gigantic emerging still rapidly growing field. Everyone is learning SQL at all parts of the organization.

Benjamin: Exactly. Of course, this hurts my ego, but I'm kind of one of those people. I'm not a professional software engineer, I work in data science. I can code but most professional software engineers do not want me shipping production code. There are a lot of people like that.

David: What's the exact same dynamic as Webflow? Lots of people who use Webflow can make a website on their own and are fully capable of coding a website, but you wouldn't really want to do that. There are also lots of people who use Webflow who are not at all capable of coding a website.

Benjamin: That's a perfect analogy. That's exactly it and we were really inspired by those tools. We were inspired by Webflow, we were inspired by Figma, we were inspired by Squarespace and all those kinds of tools that give those powers to people who either can't code, know some code, or even people who can code but it's just a terrible use of their time to reinvent the wheel.

David: I'm pretty sure we're talking about April 2020, sort of the beginning of COVID. This is pre-GameStop and WallStreetBets going supernova.

Benjamin: Absolutely. At that time, it was absolutely a very niche market when you talk about systematic trading. There were weird internet forums. Again, they were growing at a fast rate. So a lot of times, I look at things and I don't look at the intercept, look at the slope kind of thing. The slope was like, okay and it's crazy.

If COVID at that time taught us anything, it's when things are growing exponentially—well, that's the other thing. Look at not just the slope, maybe look at the second derivative. If that's positive, you have acceleration. If COVID taught us anything, it's don't underestimate exponential growth. These are small communities but they're growing really fast.

When things are already obviously huge, those things tend to be saturated. The secret's out and here, I kind of saw a secret. I was like whoa, this is going to be something because it's growing really fast. There's something here and I looked at subreddit stats. I looked at what are the fastest-growing subreddits? One of the fastest-growing subreddits two years ago was algotrading, which now has 1.4 million members. When I was starting Composer, it was under around 100,000, in that range.

Ben: Where can you go to get analytics on subreddit growth?

Benjamin: There's like subredditstats.com. If you just google it, subreddit stats, you can look up subreddits and it'll give you stats.

Ben: It feels like a great place to mine for startup ideas.

Benjamin: Exactly. Everybody who's looking for an idea, every MBA is going to go look at this.

David: Every VC associate out there.

Benjamin: Is now going to want to research which subreddits are growing. WallStreetBets started popping off way before the GameStop thing. It was popping off because people were [...] investment, it was a terrible idea. They were buying naked puts on SPY, huge amounts of them with leverage and [...] doing crazy [...]. They're like okay, there's going to be a huge correction because of COVID, which is a pretty easy call at the time.

Ben: Which seemed very logical. We were hitting circuit breakers every day.

Benjamin: Yeah. They were buying huge amounts out of the money puts and it was falling, and it was really funny. Maybe I just have [...] sense of humor. I was following it just because it was funny.

The thing that I saw was that on WallStreetBets, you saw a lot of these sort of centric people there that were becoming more sophisticated. You're watching them learn. I think Wall Street is overly impressed with themselves and all industries. It's not just Wall Street, I don't want to say that the tech is enlightened and Wall Street is stupid. People in tech also like to think they're smarter than they actually are.

Wall Street really does it. They use lots of jargon and acronyms to make everything more complicated, no, you can't do this. What WallStreetBets kind of say is that no, we can. We understand what we're doing. When I see the GameStop thing, I think the point that a lot of people missed in that, a lot of pundits missed is they're like, oh, these people are idiots. Some of them were, some of them were really smart.

Even Matt Levine had to be like, actually, they were right and I was wrong. They figured out how to orchestrate a gamma squeeze. I thought the market makers were smarter than them. They were smarter than the market makers. That's pretty wild. They outsmarted market makers who had a really imbalanced order flow and managed to do all kinds of crazy stuff. That's pretty wild to me.

They could understand. They were using Robinhood, but they were talking about all the Greeks. They actually like we're teaching each other, and they're being really vulgar so I think people dismiss them. The point here is that they were much more sophisticated than people gave credit to just because of the irreverent tone of the conversation. They weren't stupid, some of them were, not all. Some were actually pretty bright. The thesis there was that there's a much more sophisticated segment than we maybe give credit for that's out there.

Ben: There's a natural tea up here too. Okay, did that segment start using Composer once you launched into the world? What's the journey been like? Before that, I'm interested in this idea of the WallStreetBetsification of finance. I'm curious what second and third-order impacts has it had on the markets as a whole that we have all these people, not only trading on platforms like Robinhood, but like starting to use leverage for the first time, and how has market-making changed?

In particular, you mentioned some of these apps use different pools in order to match the supply to demand and maybe don't make it all the way to the market or to the exchange. What weird stuff has happened in the last couple of years in the stock market that is the fallout of this?

Benjamin: A lot of trading activity happens now off the exchange. The reason for that is that it's not as ominous or nefarious as I think sometimes people make it out to be. It has, at least in the short term, made transaction costs less for consumers. Just like a primer, if you execute an order on an official stock exchange, a customer that does a market order might pay what's called the NBBO, which is the best bidder offer. That's essentially where they're required to give you the best spread that's available on any public exchange for that security so that you can't get screwed.

What apps like Robinhood and other and other trading apps have realized is okay, what we could do instead is actually get better execution by selling to a big market-making hedge fund, sell that order flow to these hedge funds, and they will actually share some of the spread back with us and we'll share some of that spread with our customers. They get essentially a revenue share of this tighter spread. It works for the hedge fund because they're still making money. If you're sending a bunch of retail order floats to one of these hedge funds.

Ben: That's the hedge fund as the counterparty for the trade?

Benjamin: Yeah, exactly. They'll take all that order flow and they're not taking any directional position. They're just saying, okay, we'll make a market in this and they're going to assume that, frankly, all that retail order flow isn't informed. When I say uninformed, it just means that they don't have any knowledge about where prices are going to move on a really short timescale, which is true for basically any retail trader.

Therefore, they don't have to worry that if they fill it that they're going to get screwed. It's actually desirable that that order flow is what they would call uninformed. They can basically pretty reliably know that if it's retail that they're going to make that spread, which reduces risk, which means they can actually offer a narrower spread on those orders.

The bid-ask spread actually narrows because there's less risk to that hedge fund so they like all that retail order flow. Because there's a narrower spread, then what some of these apps will do is they actually will give better spreads to the customer. Again, they legally cannot give a worse spread than the NBBO. It's not so nefarious. It's not so toxic for the consumer.

It can lead to some skewed incentives because some of these apps make money the larger the spread is. They might steer a customer to more illiquid or assets with larger spreads because that will make more money.

Ben: What's showing up on your home screen, your push notifications, or something.

Benjamin: Exactly. It can screw up incentives. Certainly, if you know what you're doing, I don't think it's a bad thing because what this PFOF does, it's a revenue model. The hedge fund shares. It's a rev share agreement, shares some of that spread with something Robinhood or whatever. Then Robinhood or whatever app doesn't have to charge any commissions.

Then you're giving commission-free trading to your customers. If it's for lowering costs and you're not like a high-frequency trader, I don't see why this would be bad for customers. I think it is quite complicated because of the mouthful that I just explained. I think when things are confusing, people's first reaction is to be like it must be evil.

David: Most of the activity that's happening on a consumer platform like Robinhood isn't strategies based on micro timescale optimization.

Benjamin: Exactly. By definition, it's not.

David: If a high frequency trading hedge fund makes a little extra spread on my order on Apple, that's meaningless to me as a retail investor. That's like, I want to buy five shares of Apple and hold them for a while.

Benjamin: Not only that, you probably would have paid more if you traded on exchange anyways. Now, if you want to get really technical and I won't go down that whole rabbit hole, there is a game-theoretic argument, and I don't want to throw a bone on the regulators, but if you put everything on exchange, you could argue that possibly spreads would narrow because the existence of these dark pools then increases the spread on exchange. That's why you get better order execution off-exchange, there's an argument.

David: But it's not like Citadel knows that Apple's going to go down over the next month, I don't know that, and they're screwing me. That's not what's happening at all.

Benjamin: No, that's not their model at all. They're not taking a directional position at all. They're just hoping that all the orders balance out. It's completely market neutral. There's no directional position on that kind of business.

Ben: It's interesting. The dark pools thing, this is only something I learned recently and kind of blew my mind that the reason it's dark is because supply and demand are not being matched by the exchange. They're happening off-exchange in a different pool. If you're subscribed to exchange data, you're actually not going to see that that transaction is even taking place. The amount of data that is visible to anyone who's looking at exchanges is less than it used to be because of this new business model.

Benjamin: Yeah, that's absolutely right. Getting a holistic picture of all order flow is really, really hard right now for that exact reason.

Ben: It's fascinating. I totally buy that game-theoretic argument though that you get much narrower spreads if we were all forced to actually go to the single central market maker for any given asset.

Benjamin: Yeah, it's sort of like a prisoner's dilemma type of thing, although I'm probably out of my depth now. I'm not a [...].

David: Maybe let's rewind a little bit. You were the reason that we're joking about Packy, Not Boring, and all this. You worked with Packy at Breather?

Benjamin: I did for many years.

David: For many years.

Benjamin: For several years.

David: You were head of data science and then head of product at Breather?

Benjamin: Yeah, the trajectory is I just started as a rank and file data scientist, I was promoted a few times, and then I ended up as VP of Product running product and data science. Then we were in this crazy Office of the CEO situation where we were co-CEOs of Breather in this wild transition period. It was an adventure for sure.

David: You mentioned that when you started Composer you were having this problem. You would imagine hearing this episode so far. It's like, oh, at some point in time, Ben was a quant data scientist at a hedge fund, and that's how you came into this. That's not what happened.

Benjamin: No, and I don't think that's an accident. I learned increasingly why because people who would come from that background probably wouldn't have the empathy, frankly, for the problems involved, not that they're low empathy in general or bad people. Product thinking is different from quant thinking. I think that by nature of my role, I happen to see the value of both. I'm not saying one isn't all superior to the other, it's just a very different way of approaching problems. A quant hedge fund mindset.

I actually remember I was interviewing for one point at D. E. Shaw or a hedge fund like that. They were trying to bring me in for something related to incubating something on the technology side. I said, why are you doing this? You have all these people with better credentials than me. Why are you interviewing me for this role? I said, I'm selling myself out of the role.

They said, because these people, they're the world's most preeminent expert on this one tiny thing, this one very narrow thing that they're optimizing. It's so mature at this point that they did a postdoc on this thing, they want to focus on that thing, and that's it. They're not going to go rebuild a whole new product or way of approaching something from scratch. That's a lot of it. I will say that I've also been in trading and investing since I was a teenager. I've had this as an interest.

I've worked on a lot of problems that involve data. That's a huge component of that as well, but then also, there's a product aspect. There's a certain amount of synthesis here that was required, as opposed to, say, optimizing. Again, this is a product company. It's not, how can I create an adaptive order algorithm that shaves nanoseconds off of some traders? It's not that.

Ben: To the extent that there's an optimization function to create the best product here, you don't even really—when you're starting the company—know what you're optimizing for. I guess it's an enterprise value or something, some very long—

Benjamin: It's a wicked problem, not a tame problem. It's a very wicked problem. It requires divergent thinking rather than convergent thinking in the beginning. You have to do this generative process of generating a lot of different ideas and then connecting them. That's not comfortable for a lot of people.

Ben: No. When I tell you this sentence, there should be some kind of product that lets you compose different building blocks to execute trading strategies, that's not a product spec. There are a zillion questions that stem from that, and it's like, okay, who's using it? How much should we presume that they already know? And what's the atomic unit of a building block? All this stuff just creates a wicked problem.

Benjamin: When you start, everything's very high level inherently. It's funny because a lot of people talk about how ideas are a dime a dozen, execution is everything. For most of the life cycle of a company, that is absolutely the case. I do think in the very beginning, the idea does matter because that is the execution. In other words, it's very hard to even disentangle the two in the beginning.

Like you're saying, you have to take this idea that's a high level problem statement and then keep breaking it down going to the next level of abstraction because that's a very abstract problem. You have to keep breaking it down and resolving it to a low level abstraction until you're actually building a product. That process is difficult.

I don't even know if it's ideation or execution, but it's definitely a big part of the initial creation of a startup. It's one of the hardest parts and it's one of the most mysterious. People have tried to scientize it and systematize it and mostly failed, in my opinion.

David: You're talking to a startup studio founder here in the other Ben G. on the line here.

Benjamin: Absolutely, yeah. But that makes it a good problem. Because people have failed to do it, I think that's what makes it an interesting thing to try to create a studio for it.

Ben: It's funny. I can tell you, we have not gotten better at having better ideas. We still—six and a half years in—kill 90% of the ideas that we actively work on despite having lots of systems and processes to work through these ideas as fast as possible. We've gotten more efficient at killing ones when we think they're going to end up bad, but it doesn't mean that your raw material input gets higher quality.

Benjamin: Yeah. I think one of the most fascinating things there for example is, why is the distribution of startup outcomes largely unchanged? Why would that be a natural law? Is it a natural law? Is it just natural law that 90% of very early ideas fail? And then there's a sort of distribution that as you go through stages, but it's been remarkably stable. Even the top-tier VCs, what separates them from third-tier VCs or second-tier VCs is simply just the payoff. It's not the actual probability distribution, it's the payoff function. It's not the ones that hit, just hit harder.

David: It's like our two-part series on Andreessen. That was the whole thesis and everybody was, show me the money, show me the money, show me the money, and then they're like Coinbase DPO. There's the money. They made $11 billion.

Benjamin: People were talking [...] about a16z. It's like, the [...] isn't very good.

Ben: Yeah, that 2015.

Benjamin: Yeah, you don't know that yet. But then it's really interesting. It's so hit-driven.

David: But yeah, their distribution of outcomes is probably not that different from any other firm. It's just that they're the head of the power law that netted them $11 billion. That's the difference.

Benjamin: Yeah, you get one event that returns the whole fund and that's the game. It's a little frustrating at a level of a startup that you don't have that sort of diversification. Then it becomes a question of, can you recreate that internally? While still having conviction, obviously, you can't just throw spaghetti at the wall.

Ben: Obviously, because you don't have infinite resources, you're faced with this abstract problem that every time you put a stake in the ground, you end up with five more questions. What were some early guardrails that you put in place where you're like, okay, we know for sure we're doing this, not that? And how did you get from the broad idea to what it is specifically in code that runs and designs that look nice today?

Benjamin: I think you need to have a high level set of guiding principles. You need values and you need guiding principles. Just like companies have values and we had these very early before we even incorporated. We said, okay, we need to codify our values in the cultural sense, in the HR sense. I think you need product value. You need attributes that are evergreen, otherwise, you don't have a distinctive product culture.

There were three that I came up with pretty early. They're gorgeous, accurate, and fast. Those are three examples of attributes that were going to guide this. And then just more to the point that this was going to be a product that while solving something quite technical and serving a relatively technical audience was going to be guided by design principles and by usability because almost no one else in the space of these prosumer trading tools.

Some of them are actually quite successful businesses. They're not sexy, but some of them are extremely successful businesses. But they're not well designed and they don't put usability first.

One of the easy constraints was this high level constraint, which was like, okay, we have to balance flexibility with usability. We have to be opinionated in our design so that we steer people to use the product in a way that it just functions and works better. That means that you can't do what a lot of failed no-code tools do, which is you say, okay, I want this to be like a totally full functioning programming language that's turning complete, does all these things, and does everything at the expense of it being at all usable.

That continues to be one of the hardest parts. It's so hard. I wrote this article with Packy. One of the things about Excel and one of the things we really talked about because we've been talking about this for a long time. It's like, why is Excel such an enduring piece of software? Why is it so successful?

If we had to have a bullet point thesis, it's the only thing that's usable and flexible. That's actually incredibly rare. How many things can you think they have total flexibility and are extremely usable for regular people? That's such an insanely difficult challenge. Just that alone focuses you a lot. If you say, it has to be usable but still flexible enough to hit these XYZ use cases, that's an incredibly focusing product objective.

David: What was the journey from? April 2020, you're starting this to there's a product that works and that people can use.

Benjamin: It took a while to actually build the MVP, not surprisingly. We're doing something that isn't just like a riff on something that already exists. When you're doing something category-creating like this, it is pretty hard. We had to do a lot of mockups and prototypes. We spent months just doing user research on prototypes and proof of concepts, creating videos, and Figma prototypes.

We did hundreds of hours of qualitative research of user interviews. It's just like, does this make sense? Because again, getting something that's powerful and usable is so hard. One of the biggest challenges is almost like it's a cognitive science problem, more than anything. It's like, do you understand this? I think it validated that. It doesn't make sense to ship a whole bunch of code.

We spent months in that stage. It took almost a year to really have something that was actually ready to be used by real humans, and then it really evolved quickly from there. Once you have that initial foundation, then you can just keep iterating. But to build that initial foundation was hard. It was definitely really hard.

Ben: You've got this usability thing you're testing, but you also have to test, will people make money trading with these strategies? Because you started with a finite set of your own trading strategies, right?

Benjamin: Yeah, that's right. I think it really helps that all these are backtested. This is part of being opinionated. Actually, Kyle, who writes content for us, he's fantastic. Actually, he was at Vanguard for a while and joined us. At least we have some people who know what they're doing. He wrote this piece today on the value of backtesting. Backtesting isn't perfect, obviously.

First off, they always give you that asterisk that says, past returns are not predictive of future returns. That's true. There's something very pernicious in backtesting, which is overfitting. If you throw enough spaghetti at the wall you're going to find something that works. You can cherry-pick data that makes any strategy look good on a backtest.

It's not perfect, but I have found, personally, it's so much better than the alternative. It's just making [...] up as you go. How can the latter be superior?

David: Even just the backtesting, I can imagine that's like a pretty freakin' killer feature of Composer. If I come up with a strategy before Composer and I want to back-test it, what the hell am I going to do? I can't do that.

Benjamin: It's incredibly difficult. There's a free tool that a lot of people use called Portfolio Visualizer, but it's very basic and only uses monthly data. It's very coarse. The most recent data it has will be 45 days or whatever on average delayed. It doesn't feel like a modern analytics tool in that sense, but it is impressive. It was the most impressive free tool that I was using at that time.

Backtesting is super hard. It's super, super hard. It's computationally difficult and intense. You have to get all that data clean, all that historical data and have it somewhere. Really, backtesting is really hard. And then creating an accurate simulation of what actually happened. That in itself is really hard.

I was listening to Jim Simons at RenTech, which is by far the most successful hedge fund of all time. There's a great book, The Man Who Solved the Market. He was being interviewed and he's like, yeah, our strategy is people would probably be surprised. They're not as complicated as you probably think. The one thing that I'm just not even worried about anybody competing with us on is just accurate data and accurate backtesting.

He's like, we spent years just accurately estimating transaction costs, how orders are filled, and what things actually look like, how they traded. He said, that question alone is so hard that nobody—he thinks nobody except for them actually does it well. That's their advantage. His little thing though is that the future is like the past.

RenTech, the reason it's the most successful one, he's like, we're just really, really good at actually figuring out what happened in the past. Most people fail because they didn't actually simulate things properly. You can actually truly simulate it then like, no, actually, a lot of these things are pretty predictive of the future. Their raison d'etre is that. It's just really accurate backtesting. Clearly, you can do some pretty incredible things with that if you just do it really well, if you know what you're doing.

Ben: Every time I read a book, there's a new concept I'm obsessed with. After I read the principles, I got obsessed with backtesting. It's like, once you see it, you can't unsee it. Did you try to implement backtesting in other places in the company? In your decision-making process or in your hiring, do you apply it more broadly than just for the trading strategies?

Benjamin: Yeah. Maybe I don't call it backtesting, but yes. Yes, I think we are genuinely a more data-driven company. We like to have a record or provenance trail of decisions of events. I wouldn't say we're totally systematized. We're not Bridgewater. My guess is that's mostly PR.

I don't rate people after interactions. If they rated after me, it would probably destroy my ego. I think we're all too delicate and fragile to have the true RenTech social currency score or whatever. But we have an amazing analytics lead, for example, really early in our company history.

We have more tracking, for example, set up than a typical startup or stage because we like to track things and see how they perform. Yes, I think it has absolutely influenced how we make decisions and how we analyze things.

Ben: David, I remember you did this in kind of a crude way. When you were at Madrona and you were trying to answer the question of, what makes for the most successful founders of the biggest companies of all time? And it was coarse.

David: You know what I used? Excel.

Ben: Yeah. I have the spreadsheet, but it's like, okay, let's look at the backgrounds of all the people who started $100 billion companies and let's look at different markers and private company data. If you're trying to analyze startups, it's so much harder because you don't have the ticker. You don't have the second by second tape.

Benjamin: That's also all private.

Ben:  Right.

Benjamin: Most of that data is completely private.

David: Exactly. To your point, Ben R., this is so hard. I did that analysis when Theranos was worth $9 billion. That was a big data point in the analysis. Obviously, that shouldn't have been worth $9 billion.

Benjamin: There was pretty immaterial nonpublic information in that case. One thing we do is we do Moneyball hiring. I'm not even sure if our staff fully knows that, but yes, our hiring is very structured in Moneyball. It's highly, highly analytical.

We didn't actually completely start that way. It's funny how many times you have to be kind of hit on the head with this. You have to keep relearning the same thing over and over and like, oh, no, this definitely applies in this domain as well. But yes, we learned the hard way, actually, that like, no, you need to be as analytical as possible, Moneyball.

David: Tell us more.

Benjamin: Some of it's a trade secret. I can't tell you everything. Hiring, obviously, last year, maybe if the markets crashed or flipped, but because there was so much money sloshing around. Fundraising was easy in the last nine months, at least, and then hiring is brutal because it's just the other side of the equation.

Ben: It's like any market. Obtaining capital is easy in this market and deploying it in a profitable way is really hard.

Benjamin: Some of that, I can't share.

David: Okay, maybe not the specifics of the hiring process. You guys are fully remote, which many companies are now, but tell us about what that means for you because you can take it to pretty extreme, extreme.

Benjamin: We are completely distributed 16 people all in different cities. They're not necessarily cities, split between Canada and the US. I started the company, I was in Nicaragua for most of the company's history. I moved back to Canada a few months ago because the situation there got a little dicey.

The funny thing is I'll be the first to acknowledge that being that distributed is not perfect. There are many, many issues and downsides to it. But I think if you just acknowledge them head-on you can mitigate a lot of those issues. Life is a series of trade-offs.

David: How do you communicate? Is it Slack? Is it email? Is it synchronous? Is it asynchronous?

Benjamin: I have a very controversial take. Actually, I think that if you're remote, async is actually a terrible idea. Fully, async is terrible. I know GitLab loves it, other people love it. A lot of people, a lot of specialized engineers, love it. If anything, I'm the type of person who would like async, but I just finally had to accept that I don't understand.

I don't think a consumer product company can be fully async. The reason why is, yes, async is less disruptive, but you need synchronous communication. You need a lot of synchronous communication if you're remote because if you're physically not in proximity, that already affects trust. It already affects the bandwidth of communication so much.

Things get lost in contact and translation. They get confused and muddled. There's been so much research on that, so why would you make it harder? The big thing—and we're always adapting and learning here, even recently I realized—is just the biggest feature that we take advantage of is Slack huddles, just hop in a huddle.

If there's any confusion, just hop in a huddle. I think there was this weird insecurity that a lot of remote companies had and it's the classic. Right now, everything is so polarized. You have to be one extreme or another. If we're remote, then we have to be like GitLab and do everything asynchronously.

The only way we communicate is through comments on a GitHub PR or a JIRA ticket, or you're in the office and you spend all day in meetings. Can we be a little more thoughtful about this? I think with everything with this stuff, you have to take the first principles, like say, okay, what makes sense for us? What doesn't make sense?

David: Tell us a little bit about where Composer is today.

Benjamin: We launched in open beta at the end of last year. The really cool thing is we have a lot of super users that are out there spreading the Composer gospel, which is really, really cool to see. Especially as someone who was early, built something as a customer-owned product, to see people who are even more fanatical than myself is a pretty, pretty fun and pretty exciting thing too.

David: Where do those people hang out? Do you have your own communities? Is it on Reddit or?

Benjamin: It's a variety of places. A lot of it is Reddit. That's a lot of it. Some of it is Bogleheads. You see people in different online communities in these niches. I'm sure there are also some in Discord and things like that that area harder to discover.

David: Dark pools.

Benjamin: Yeah, dark pools. Exactly. That's really, really cool. The other really exciting thing, like I mentioned, is just the team. We have this really, really killer team. That was a very hard thing to build. Like I said, we're at 16 today.

That's pretty wild because that team is now extending my original vision in ways that I never thought of. They come from really different disciplines now. It's a very, very interdisciplinary team. They can cross-pollinate ideas and work on things in a way that really does create this collective brain trust that is a whole lot more powerful than anything I could have come up with.

David: You were the first Not Boring portfolio company. You and Packy wrote Excel Never Dies together. There's the Not Boring memo on Composer. How much of the interest in Composer is either on the user side, on the hiring side, or frankly in the capital-raising side do you look back and you can attribute to that?

Benjamin: Oh, huge. I don't even hold any punches there. I think without a doubt, especially relative to the check side, the highest value add was having Packy. That was luck. When he wrote the memo, I think he had 7000 subscribers. He was not a known entity.

We have funny stories there. But when we were doing that, some people were even like, why is this guy? Is it going to add value? People ask questions like that. Now, some of those same people are hitting me up like, please, can you just make [...]? I just want to talk to Packy for 10 minutes? Can you squeeze [...]?

It's wild. how fast things change in this world now. That was 18 months ago. Just even saying that is crazy. That was 18 months ago. That delta is insane. Some of that was luck, but his platform, that kind of thing is the future. Those kinds of newsletters and thought leadership is a huge part of our distribution strategy going forward and he informed a lot of that.

He inspired us to think about Composer as not just trading, not just strategy, not just a no-code tool, but it's content. Each of these strategies is content and really rethinking what content even means. These strategies are content. You can write around them and then you can share them. That's part of the reason, like I said, we have someone who writes full time for us internally.

All those moves were inspired by just watching Packy's meteoric rise. That was hugely, hugely inspiring to us. I'm biased here, but I can honestly say he's a fundamentally very good person, which helps a lot. He's a good person. That helps a lot. That means a lot.

Ben: I can definitely second that. As someone who's very interested in this evolving media business model, do you use the Not Boring investment memo as collateral for recruiting? Do you find yourself sending that to people?

Benjamin: Yeah, especially early on. Now it's a little stale not because I thought it was excellent.

David: I thought that you charge $30 a month because that's what Packy told me in the memo, that you charge $30 a month.

Benjamin: It's old. Yeah, exactly. That was stale, but it's old now. Absolutely, in the beginning, yeah. Absolutely, we would share it with investors, we'd share it with people. It was very valuable. Also, he created that diagram that showed us this—I still use certain metaphors and things that he created in that and certain images. Calling Composer an Entropy Wrangler.

That image that I think really resonated with a lot of people is like, okay, he created this little diagram that showed Robinhood on one side, Robo-Advisors on another side, and Composer's in the middle. That was a Packy creation. He has a way of taking things that are complicated and distilling them in a way that's just very relatable. We've remixed some of those elements into our own collateral for sure.

David: Your story is bringing up for me memories of being in business school and beyond Andy Rachleff and his framework that he always talked about like, to be a successful startup, you need a secret or an innovation. You need an unfair advantage on the product side, but also on the distribution side. You got to get both of those.

Benjamin: How does this guy have so much distribution? He didn't spend any money on it? Hey, well, it's better to be lucky than smart, right?

David: Right. It's cool. You have this secret on the product side of, hey, there's all these people out there, they're hanging out in Reddit that some of them are idiots, but a lot of them are not, and some of them who are idiots are going to learn to be not and they're going to want tools. That's a product secret, right?

Benjamin: Absolutely.

David: And then you get this tiny angel check into your company that leads to something that can completely change the distribution equation for you.

Benjamin: Oh, totally. People argue about what's more important than product or distribution? It's both. I was in a retreat with some CEOs and one of them said, yeah, it's like asking, what's more important, a brain or a heart? You can't live without either, so you better have both. They both matter a whole lot.

Ben: There are situations where a product can have such perfect product-market fit that the answer on distribution is, well, it spread virally because people just loved it deeply and shared it with their friends. That's an answer too, but that is not an answer that you can scientifically count on in the process of crafting your startup.

Benjamin: Yeah. You'll have some good things on that. I think the argument there is that most of the things that look like that weren't actually the case. All the classic examples, it wasn't actually the case. Facebook did all these aggressive tactics for distribution. Airbnb did all these aggressive tactics for distribution. Google paid billions for distribution.

Ben: It still does every year.

Benjamin: Really like gangster [...] back in the day. They were distributing toolbars through Adware packages. It was super aggressive. It was by far the best search engine. As someone who is much more of a product and data guy, I'm not a marketing person, but it's something you have to learn. It's like, no, everybody has to do distribution.

Ben: Ben, this has been awesome. There are a lot of investors that listen to the show. Anything they should be thinking about or that's exciting that you want to share with potential future investors?

Benjamin: I'm not too worried about fundraising.

David: I'm shocked that you're not worried about fundraising. It's well deserved.

Benjamin: I'm not going to do the used car salesman kind of thing.

Ben: All right, what about who should try out Composer and where should they go to play with the product?

Benjamin: Any serious investor that wants to earn better risk-adjusted returns, wants to stop flying by the seat of their pants, and wants to get rid of their messy Excel sheets should go to www.composer.trade. Sign up today. You can play around with it. You don't even have to transfer money to start playing with it. Do that today.

David: I love it. One final question I meant to ask earlier. I love the name. Where did Composer come from?

Ben: Are you first or the Web3 composability people first?

Benjamin: I think we were before that. Web3 wasn't a term when we came out with Composer.

David: I think Packy made composability a Web3 term because of you.

Benjamin: They swagger jacked us. I'm just kidding. The Composer thing goes on a couple of levels. One is that I love music. Originally, I didn't have the talent for it, but I wanted to be a musician back in the day, a composer, or something. There's that sort of personal aspect of it and I do think that there are all these parallels between great software and great music composition.

Rich Hickey has actually talked about that a lot. It was the creative closure, incidentally. I didn't even know that, but we actually use closure and that's a total coincidence. That's really, really cool.

The other is a little bit more direct and a little more practical, which is just that Composer was designed from the very, very beginning. You ask in a meeting, okay, what was the guiding principle that narrowed down this design space? We wanted things to be composable.

One of the hardest things, when you create strategies, is like, okay, I need a container. I need to neatly encapsulate the strategy so that I can create a strategy that is composed of other strategies. It sounds abstract, but it's not. We all do this when we invest because you use an ETF. An ETF is an abstraction, really, over a whole bunch of underlying assets.

There's a great book called Trillions, you should read it, that talks a lot about this. We take ETFs for granted. It was a tremendous innovation. It really was an abstraction that allows you to treat this giant basket of stocks as an individual stock.

We said, wait, could we do that with logic? Not just assets, but actually the logic that operates on those assets. Could you compose those strategies into a Russian doll structure? That's the origin story of that name.

David: I love it. All right, LPs, this has been awesome. Ben, thank you for joining us.

Benjamin: Thank you for having me.

Ben: Thank you to Tegus for sponsoring this episode. With that, LPs, we'll see you next time.

David: See you next time.